{"compress":true,"commitItems":[["75a3c26a-9b5b-43ba-a731-0c5ef0eecdb4",1630380029095,"",[[1630379969348,["Administrator@YMS-20200313EGD",[[1,0,"# Untitled\n\n\n\n"]],[0,0],[13,13]]],[1630379969357,["Administrator@YMS-20200313EGD",[[-1,13,"\n"],[1,14,"\\"]],[13,13],[14,14]]],[1630380025080,["Administrator@YMS-20200313EGD",[[-1,0,"# Untitled\n\n\n\\"]],[0,14],[0,0]]],[1630380031449,["Administrator@YMS-20200313EGD",[[1,0,"---\nlayout: 深入理解PHP7变量的内部实现\ntitle:   深入理解PHP7变量的内部实现\ndate: 2019-09-10 12:32:45\ncategories: \"PHP\"\nabbrlink: 008a\ntags: \n- PHP\n- PHP源码解析\n---\n\n<img src=\"http://images.linyiyuan.top/zval_sep.png\" style=\"width:900px;height:400px\" />\n\n# 导言\n在学习PHP垃圾回收机制过程，跌跌撞撞，网上大多数文章都是基于PHP5.x环境下，就连官方文档也一样，在学习PHP垃圾回收过程中，由于PHP7.0采用全新的Zval结构，所以针对网上大多数文章都所给的参考都比较参差不齐，在总结了网上相关文章后总结出这篇关于PHP变量的内存管理文章，文章主要讲解PHP7变量的内存管理，关于变量的内部实现可以参考《PHP内核解析 -- 变量的内部实现》  这篇文章有助于理解PHP7新的Zval结构，变量内存管理，垃圾回收机制\n\n<!--less-->\n\n\n# 1. Zval\n\n在任何一个语言中都存在着变量，变量是一个语言实现的基础, 而变量有两个组成部分：变量名、变量值 而 `Zval` 就是PHP语言中变量基础结构, 变量有两个组成部分：变量名、变量值，PHP中可以将其对应为：zval、zend_value，这两个概念一定要区分开，PHP中变量的内存是通过引用计数进行管理的，而且PHP7中引用计数是在zend_value而不是zval上，变量之间的传递、赋值通常也是针对zend_value，下面我先简单了解下Zval的基础结构\n\n## 1.1 Zval基础结构\n```c\n//zend_types.h\ntypedef struct _zval_struct     zval;\n\ntypedef union _zend_value {\n    zend_long         lval;    //int整形\n    double            dval;    //浮点型\n    zend_refcounted  *counted;\n    zend_string      *str;     //string字符串\n    zend_array       *arr;     //array数组\n    zend_object      *obj;     //object对象\n    zend_resource    *res;     //resource资源类型\n    zend_reference   *ref;     //引用类型，通过&$var_name定义的\n    zend_ast_ref     *ast;     //下面几个都是内核使用的value\n    zval             *zv;\n    void             *ptr;\n    zend_class_entry *ce;\n    zend_function    *func;\n    struct {\n        uint32_t w1;\n        uint32_t w2;\n    } ww;\n} zend_value;\n\nstruct _zval_struct {\n    zend_value        value; //变量实际的value\n    union {\n        struct {\n            ZEND_ENDIAN_LOHI_4( //这个是为了兼容大小字节序，小字节序就是下面的顺序，大字节序则下面4个顺序翻转\n                zend_uchar    type,         //变量类型\n                zend_uchar    type_flags,  //类型掩码，不同的类型会有不同的几种属性，内存管理会用到\n                zend_uchar    const_flags,\n                zend_uchar    reserved)     //call info，zend执行流程会用到\n        } v;\n        uint32_t type_info; //上面4个值的组合值，可以直接根据type_info取到4个对应位置的值\n    } u1;\n    union {\n        uint32_t     var_flags;\n        uint32_t     next;                 //哈希表中解决哈希冲突时用到\n        uint32_t     cache_slot;           /* literal cache slot */\n        uint32_t     lineno;               /* line number (for ast nodes) */\n        uint32_t     num_args;             /* arguments number for EX(This) */\n        uint32_t     fe_pos;               /* foreach position */\n        uint32_t     fe_iter_idx;          /* foreach iterator index */\n    } u2; //一些辅助值\n};\n```\n\n对于该结构的详细描述来自于《PHP内核解析》，`zval`结构比较简单，内嵌一个union类型的`zend_value`保存具体变量类型的值或指针，`zval`中还有两个union：`u1`、`u2`  我们重点理解 `zend_value`  从`zend_value`可以看出，除`long`、`double`类型直接存储值外，其它类型都为指针，指向各自的结构。\n\n## 1.2 引用类型\n\n在本文章我们重点讲解 `引用` 这个特殊类型，而其他类型如：`字符串` `数组`等均不作详细讲解，引用《PHP内核解析》的一段话  “引用是PHP中比较特殊的一种类型，它实际是指向另外一个PHP变量，对它的修改会直接改动实际指向的zval，可以简单的理解为C中的指针，在PHP中通过`&`操作符产生一个引用变量，也就是说不管以前的类型是什么，`&`首先会创建一个`zend_reference`结构，其内嵌了一个zval，这个zval的value指向原来zval的value(如果是布尔、整形、浮点则直接复制原来的值)，然后将原zval的类型修改为IS_REFERENCE，原zval的value指向新创建的`zend_reference`结构”\n```php\nstruct _zend_reference {\n    zend_refcounted_h gc;\n    zval              val;\n};\n```\n\n其中 `zend_reference` 内存拥有一个自己的value 还有一个zend_fefcounted_h(引用计数器), 而我们的垃圾回收机制也是基于此，现在让我们来看一个官方例子：\n```php\n  $a = \"time:\" . time();      //$a    -> zend_string_1(refcount=1)\n  $b = &$a;                   //$a,$b -> zend_reference_1(refcount=2) ->     zend_string_1(refcount=1)\n```\n\n首先我们声明了一个变量$a并赋值 “time() . time()”, 此时内存分配给了$a一个`zval_struct`容器 并且容器value指向 `zend_string` 此时该`zend_string` 的refcount(引用次数) 为1，然后我们继续声明了$b 变量 并引用赋值$a, 此时$b 也拥有了属于她的`zval_struct` 容器，由于是引用传递，所以`&`首先会创建一个`zend_reference`结构 然后该结构的`zend_reference.value`指向$a 所指向的`zend_string` , 紧接着$a 的 `zval_struct.value` 的数据类型会被修改为 `zend_refrence`并将 $a  `zval_struct.value` 指向刚刚申请并初始化后的 `zend_reference` 最后为新变量申请 `zval_struct` 结构，将他的 `value` 指向刚刚创建的 `zend_reference`， 此时：$a 和 $b 都拥有一个 `zval_struct` 结构体，并且他们的 `zval_struct.value` 都指向了同一个 `zend_reference` 结构，所以该结构的引用计数器的值为 2。\n\n    题外话：zend_reference 又指向了一个整形或浮点型的 value，如果指向的 value 类型是 zend_string，那么该 value 引用计数器的值为 1。而 xdebug 出来的 refcount 显示的是 zend_reference 的计数器值（即 2）。\n\n最终的结果如图：\n\n![](http://images.linyiyuan.top/zend_ref.png)\n\n注意：引用只能通过`&`产生，无法通过赋值传递，比如：\n\n```text-html-php\n$a = \"time:\" . time();      //$a    -> zend_string_1(refcount=1)\n$b = &$a;                   //$a,$b -> zend_reference_1(refcount=2) -> zend_string_1(refcount=1)\n$c = $b;                    //$a,$b -> zend_reference_1(refcount=2) -> zend_string_1(refcount=2)\n                            //$c    ->                                 ---\n```\n\n`$b = &$a`这时候`$a`、`$b`的类型是引用，但是`$c = $b`并不会直接将`$b`赋值给`$c`，而是把`$b`实际指向的zval赋值给`$c`，如果想要`$c`也是一个引用则需要这么操作：\n\n```text-html-php\n$a = \"time:\" . time();      //$a       -> zend_string_1(refcount=1)\n$b = &$a;                   //$a,$b    -> zend_reference_1(refcount=2) -> zend_string_1(refcount=1)\n$c = &$b;/*或$c = &$a*/     //$a,$b,$c -> zend_reference_1(refcount=3) -> zend_string_1(refcount=1) \n```\n\n这个也表示PHP中的 **引用只可能有一层** ，**不会出现一个引用指向另外一个引用的情况** ，也就是没有C语言中`指针的指针`的概念。\n\n# 2.内存管理\n在理解了上面内容后我们对引用计数大概有了一个认识，接下来我们来详细理解PHP7变量的销毁和分配，这些都是基于 **引用计数+写时复制**， PHP变量的管理正是基于这两点实现的。\n\n## 2.1 引用计数\n引用计数是指在value中增加一个字段`refcount`记录指向当前value的数量，变量复制、函数传参时并不直接硬拷贝一份value数据;而是将`refcount++`，变量销毁时将`refcount--`，等到`refcount`减为0时表示已经没有变量引用这个value，将它销毁即可, 下面我们来看一个官方例子：\n\n    硬拷贝这种方式是可行的，而且内存管理也很简单，但是，硬拷贝带来的一个问题是效率低，比如我们定义了一个变量然后赋值给另外一个变量，可能后面都只是只读操作，假如硬拷贝的话就会有多余的一份数据.\n\n```php\n$a = \"time:\" . time();   //$a       ->  zend_string_1(refcount=1)\n$b = $a;                 //$a,$b    ->  zend_string_1(refcount=2)\n$c = $b;                 //$a,$b,$c ->  zend_string_1(refcount=3)\n\nunset($b);               //$b = IS_UNDEF  $a,$c ->  zend_string_1(refcount=2)\n```\n\n首先我们先定义一个变量$a并赋值, 这里为什么要赋值“time:” .time() 待会会详细讲解，这设计到引用计数的几种特殊类型，这时候我们的$a有了一个属于它的`zval_struct` 容器，而她的value 则指向一个`zend_value`, 而变量值则处于这个`zend_value`中，接着声明了了$b，并赋值$a,这时候$b同样生成一个属于它的`zval_struct`容器，而它的value 也同意指向`zend_value`,此时该`zend_value`的`refcount`(引用计数)为2, $c同理， 现在我们来看下引用计数所处的结构，引用计数的信息位于给具体value结构的gc中：\n\n```c\ntypedef struct _zend_refcounted_h {\n    uint32_t         refcount;          /* reference counter 32-bit */\n    union {\n        struct {\n            ZEND_ENDIAN_LOHI_3(\n                zend_uchar    type,\n                zend_uchar    flags,    /* used for strings & objects */\n                uint16_t      gc_info)  /* keeps GC root number (or 0) and color */\n        } v;\n        uint32_t type_info;\n    } u;\n} zend_refcounted_h;\n```\n\n\n现在我们来讲讲关于几种特殊情况下不会使用到引用计数，我们从上面的结构可以看出并不是所有的数据类型都会用到引用计数，以下几种类型都不会使用引用计数：\n1. IS_LONG\n2. IS_DOUBLE\n3. IS_TRUE\n4. IS_FALSE\n5. IS_NULL\n\n首先**NULL**、**布尔型**都属于**没有值**的数据类型（其中布尔型通过 `IS_FALSE` 和 `IS_TRUE` 两个常量来标记），自然也就没有引用计数， 而 **IS_LONG**, **IS_DOUBLE** 这两种类型是`zval` 在 `value` 字段中能保存下的值，就不会在对他们进行引用计数，**而是在拷贝的时候直接赋值** 即我们在 PHP 中的**整形**与**浮点型**。所以有下面几种情况:\n\n```php\n$str_integer = 123;    ->zend_string_1(refcount=0,val=\"123\")\n\n$str_float = 123.123;  ->zend_string_1(refcount=0,val=\"123.123\")\n\n$str_true = true;      ->zend_string_1(refcount=0,val=\"true\")\n\n$str_false = false;    ->zend_string_1(refcount=0,val=\"false\")\n\n$str_null = null;      ->zend_string_1(refcount=0,val=\"null\")\n```\n\n除了以上五种五种特殊类型，我们再来看一个官方例子：\n```php\n$a = \"hi~\";\n\n$b = $a;\n```\n\n不同于上面最开始的例子，我们对$a 赋值一个简单的字符串   然后$b赋值$a, 此时我们肯定以为$a,$b指向的`zend_value` refcount = 2, 但是官方给出的答案这个是错的，gdb调试发现上面例子zend_string的引用计数为0。这是为什么呢？实际上：\n\n    $a,$b -> zend_string_1(refcount=0,val=\"hi~\")\n\n当然这是官方的说法，我在本地使用PHP7.3的环境运行，使用`xdebug_debug_zval` 调试，发现结果并不是跟官方一致：\n\n```php\necho phpversion() . PHP_EOL;\n\n$a = \"hi~\";\n\n$b = $a;\n\nxdebug_debug_zval('a');\n\n\n//结果：\n7.3.0-2+ubuntu18.04.1+deb.sury.org+1\na: (refcount=1, is_ref=0)='hi~'\n```\n\n然后不信邪的继续使用PHP7.2环境运行，结果：\n\n```php\n7.2.19-0ubuntu0.18.04.2\na: (refcount=0, is_ref=0)='123'\n```\n\n发现PHP7.2与PHP7.3的结果完全不一致，我怀疑是PHP7.3更新时更新了一些东西导致的，目前在官方文档并未找到任何相关信息，我们还是具体以官方例子为准，在得出结果后作者会对该问题进行补充\n\n我们继续接着上面的例子，事实上并不是所有的PHP变量都会用到引用计数，标量：true/false/double/long/null是硬拷贝自然不需要这种机制，但是除了这几个还有两个特殊的类型也不会用到：interned string(内部字符串，就是上面提到的字符串flag：IS_STR_INTERNED)、immutable array，它们的type是`IS_STRING`、`IS_ARRAY`，与普通string、array类型相同：\n\n*   **interned string：** 内部字符串，这是种什么类型？我们在PHP中写的所有字符都可以认为是这种类型，比如function name、class name、variable name、静态字符串等等，我们这样定义:`$a = \"hi~\";`后面的字符串内容是唯一不变的，这些字符串等同于C语言中定义在静态变量区的字符串：`char *a = \"hi~\";`，这些字符串的生命周期为request期间，request完成后会统一销毁释放，自然也就无需在运行期间通过引用计数管理内存。\n\n1.  `interned string` 内部字符串（函数名、类名、变量名、静态字符串）：\n\n```php\n $str = '233';    // 静态字符串\n复制代码\n```\n\n2.  普通字符串：\n\n```php\n $str = '233' . time(); \n```\n\n*   **immutable array：**  **不可变数组**是 `opcache` 扩展优化出的一种数组类型，简单的说，所有多次编译结果恒定不变的数组，都会被优化为**不可变数组**\n\n1. 可变数组\n\n```php\n$array = [1, 2, time()];\n```\n\n2.  不可变数组：\n\n```php\n $str = [1,2];\n```\n\n\n*注意* :  **不可变数组**和我们上面讲到的**内部字符串**一样，都是**不使用引用计数**的，但是不同点是，内部字符串的计数值恒为 0，而不可变数组会使用一个**伪计数值** 2。\n\n## 2.2 写时复制\n\n上一小节介绍了引用计数，多个变量可能指向同一个value，然后通过refcount统计引用数，这时候如果其中一个变量试图更改value的内容则会重新拷贝一份value修改，同时断开旧的指向，写时复制的机制在计算机系统中有非常广的应用，它只有在必要的时候(写)才会发生硬拷贝，可以很好的提高效率，下面从示例看下：\n\n```php\n$a = array(1,2);\n$b = &$a;\n$c = $a;\n\n//发生分离\n$b[] = 3;\n```\n\n\n![](http://images.linyiyuan.top/zval_sep.png)\n\n不是所有类型都可以copy的，比如对象、资源，事实上只有string、array两种支持，与引用计数相同，也是通过`zval.u1.type_flag`标识value是否可复制的：\n\n```source-c\n#define IS_TYPE_COPYABLE         (1<<4)\n```\n\n```source-c\n|     type       |  copyable  |\n+----------------+------------+\n|simple types    |            |\n|string          |      Y     |\n|interned string |            |\n|array           |      Y     |\n|immutable array |            |\n|object          |            |\n|resource        |            |\n|reference       |            |\n```\n\n**copyable** 的意思是当value发生duplication时是否需要或者能够copy，这个具体有两种情形下会发生：\n\n*   a.从 **literal变量区** 复制到 **局部变量区** ，比如：`$a = [];`实际会有两个数组，而`$a = \"hi~\";//interned string`则只有一个string\n*   b.局部变量区分离时(写时复制)：如改变变量内容时引用计数大于1则需要分离，`$a = [];$b = $a; $b[] = 1;`这里会分离，类型是array所以可以复制，如果是对象：`$a = new user;$b = $a;$a->name = \"dd\";`这种情况是不会复制object的，$a、$b指向的对象还是同一个\n\n具体literal、局部变量区变量的初始化、赋值后面编译、执行两篇文章会具体分析，这里知道变量有个`copyable`的属性就行了。\n\n## 2.3 变量回收\n\nPHP变量的回收主要有两种：主动销毁、自动销毁。主动销毁指的就是 **unset** ，而自动销毁就是PHP的自动管理机制，在return时减掉局部变量的refcount，即使没有显式的return，PHP也会自动给加上这个操作，另外一个就是写时复制时会断开原来value的指向，这时候也会检查断开后旧value的refcount。\n\n## 2.4 垃圾回收\n\nPHP变量的回收是根据refcount实现的，当unset、return时会将变量的引用计数减掉，如果refcount减到0则直接释放value，这是变量的简单gc过程，PHP变量一般情况下都可以被回收，但是实际上也会出现gc无法回收导致内存泄漏的bug，我们这里举几个例子进行讲解，具体得一个**垃圾回收机制** 我将会在下篇文章具体讲解 先看下一个例子：\n```php\n$a = [1];\n\n$a[] = &$a;\n\nunset($a);\n```\n\n`unset($a)`之前引用关系：\n\n![](http://images.linyiyuan.top/gc_1.png)\n\n`unset($a)`之后：\n\n![](http://images.linyiyuan.top/gc_2.png)\n\n可以看到，`unset($a)`之后由于数组中有子元素指向`$a`，所以`refcount > 0`，无法通过简单的gc机制回收，这种变量就是垃圾，垃圾回收器要处理的就是这种情况，目前垃圾只会出现在array、object两种类型中，所以只会针对这两种情况作特殊处理：当销毁一个变量时，如果发现减掉refcount后仍然大于0，且类型是IS_ARRAY、IS_OBJECT则将此value放入gc可能垃圾双向链表中，等这个链表达到一定数量(10000)后启动检查程序将所有变量检查一遍，如果确定是垃圾则销毁释放。\n\n\n标识变量是否需要回收也是通过`u1.type_flag`区分的：\n\n```source-c\n#define IS_TYPE_COLLECTABLE\n```\n\n```source-c\n|     type       | collectable |\n+----------------+-------------+\n|simple types    |             |\n|string          |             |\n|interned string |             |\n|array           |      Y      |\n|immutable array |             |\n|object          |      Y      |\n|resource        |             |\n|reference       |             |\n```\n\n以上就是对PHP7变量的内部实现的总结，其中大部分内容都来自《PHP内核解析》，本人只不过对其进行了总结整合，因为网上大部分文章其实都是停留在PHP5.x的环境，容易误导，所以我在学习过程中将自己所查阅的资料总结起来，方便大家对其的理解。\n\n# 参考资料\n1. [PHP内核解析之变量的内部实现](https://github.com/pangudashu/php7-internal/blob/master/2/zval.md)\n2. [深入理解PHP7之zval](https://github.com/laruence/php7-internal/blob/master/zval.md)\n3. [confusion about php-7 refcount](https://stackoverflow.com/questions/34764119/confusion-about-php-7-refcount)\n4. [PHP引用变量机制(PHP如何处理变量)](https://www.jianshu.com/p/53fcf6128dcd)\n5. [跟厂长学PHP7内核（八）：深入理解字符串的实现](https://blog.csdn.net/enoch612/article/details/82806820)\n6. [引用计数基本知识](http://docs.php.net/manual/zh/features.gc.refcounting-basics.php)\n7. [深入理解 PHP7 中全新的 zval 容器和引用计数机制](https://juejin.im/post/5bbf50e86fb9a05ce02a9c19)\n\n\n"]],[0,0],[11689,11689]]],[1630380038601,["Administrator@YMS-20200313EGD",[[-1,0,"---\nlayout: 深入理解PHP7变量的内部实现\ntitle:   深入理解PHP7变量的内部实现\ndate: 2019-09-10 12:32:45\ncategories: \"PHP\"\nabbrlink: 008a\ntags: \n- PHP\n- PHP源码解析\n---\n\n<img src=\"http://images.linyiyuan.top/zval_sep.png\" style=\"width:900px;height:400px\" />\n\n# 导言\n在学习PHP垃圾回收机制过程，跌跌撞撞，网上大多数文章都是基于PHP5.x环境下，就连官方文档也一样，在学习PHP垃圾回收过程中，由于PHP7.0采用全新的Zval结构，所以针对网上大多数文章都所给的参考都比较参差不齐，在总结了网上相关文章后总结出这篇关于PHP变量的内存管理文章，文章主要讲解PHP7变量的内存管理，关于变量的内部实现可以参考《PHP内核解析 -- 变量的内部实现》  这篇文章有助于理解PHP7新的Zval结构，变量内存管理，垃圾回收机制\n\n<!--less-->\n\n\n# 1. Zval\n\n在任何一个语言中都存在着变量，变量是一个语言实现的基础, 而变量有两个组成部分：变量名、变量值 而 `Zval` 就是PHP语言中变量基础结构, 变量有两个组成部分：变量名、变量值，PHP中可以将其对应为：zval、zend_value，这两个概念一定要区分开，PHP中变量的内存是通过引用计数进行管理的，而且PHP7中引用计数是在zend_value而不是zval上，变量之间的传递、赋值通常也是针对zend_value，下面我先简单了解下Zval的基础结构\n\n## 1.1 Zval基础结构\n```c\n//zend_types.h\ntypedef struct _zval_struct     zval;\n\ntypedef union _zend_value {\n    zend_long         lval;    //int整形\n    double            dval;    //浮点型\n    zend_refcounted  *counted;\n    zend_string      *str;     //string字符串\n    zend_array       *arr;     //array数组\n    zend_object      *obj;     //object对象\n    zend_resource    *res;     //resource资源类型\n    zend_reference   *ref;     //引用类型，通过&$var_name定义的\n    zend_ast_ref     *ast;     //下面几个都是内核使用的value\n    zval             *zv;\n    void             *ptr;\n    zend_class_entry *ce;\n    zend_function    *func;\n    struct {\n        uint32_t w1;\n        uint32_t w2;\n    } ww;\n} zend_value;\n\nstruct _zval_struct {\n    zend_value        value; //变量实际的value\n    union {\n        struct {\n            ZEND_ENDIAN_LOHI_4( //这个是为了兼容大小字节序，小字节序就是下面的顺序，大字节序则下面4个顺序翻转\n                zend_uchar    type,         //变量类型\n                zend_uchar    type_flags,  //类型掩码，不同的类型会有不同的几种属性，内存管理会用到\n                zend_uchar    const_flags,\n                zend_uchar    reserved)     //call info，zend执行流程会用到\n        } v;\n        uint32_t type_info; //上面4个值的组合值，可以直接根据type_info取到4个对应位置的值\n    } u1;\n    union {\n        uint32_t     var_flags;\n        uint32_t     next;                 //哈希表中解决哈希冲突时用到\n        uint32_t     cache_slot;           /* literal cache slot */\n        uint32_t     lineno;               /* line number (for ast nodes) */\n        uint32_t     num_args;             /* arguments number for EX(This) */\n        uint32_t     fe_pos;               /* foreach position */\n        uint32_t     fe_iter_idx;          /* foreach iterator index */\n    } u2; //一些辅助值\n};\n```\n\n对于该结构的详细描述来自于《PHP内核解析》，`zval`结构比较简单，内嵌一个union类型的`zend_value`保存具体变量类型的值或指针，`zval`中还有两个union：`u1`、`u2`  我们重点理解 `zend_value`  从`zend_value`可以看出，除`long`、`double`类型直接存储值外，其它类型都为指针，指向各自的结构。\n\n## 1.2 引用类型\n\n在本文章我们重点讲解 `引用` 这个特殊类型，而其他类型如：`字符串` `数组`等均不作详细讲解，引用《PHP内核解析》的一段话  “引用是PHP中比较特殊的一种类型，它实际是指向另外一个PHP变量，对它的修改会直接改动实际指向的zval，可以简单的理解为C中的指针，在PHP中通过`&`操作符产生一个引用变量，也就是说不管以前的类型是什么，`&`首先会创建一个`zend_reference`结构，其内嵌了一个zval，这个zval的value指向原来zval的value(如果是布尔、整形、浮点则直接复制原来的值)，然后将原zval的类型修改为IS_REFERENCE，原zval的value指向新创建的`zend_reference`结构”\n```php\nstruct _zend_reference {\n    zend_refcounted_h gc;\n    zval              val;\n};\n```\n\n其中 `zend_reference` 内存拥有一个自己的value 还有一个zend_fefcounted_h(引用计数器), 而我们的垃圾回收机制也是基于此，现在让我们来看一个官方例子：\n```php\n  $a = \"time:\" . time();      //$a    -> zend_string_1(refcount=1)\n  $b = &$a;                   //$a,$b -> zend_reference_1(refcount=2) ->     zend_string_1(refcount=1)\n```\n\n首先我们声明了一个变量$a并赋值 “time() . time()”, 此时内存分配给了$a一个`zval_struct`容器 并且容器value指向 `zend_string` 此时该`zend_string` 的refcount(引用次数) 为1，然后我们继续声明了$b 变量 并引用赋值$a, 此时$b 也拥有了属于她的`zval_struct` 容器，由于是引用传递，所以`&`首先会创建一个`zend_reference`结构 然后该结构的`zend_reference.value`指向$a 所指向的`zend_string` , 紧接着$a 的 `zval_struct.value` 的数据类型会被修改为 `zend_refrence`并将 $a  `zval_struct.value` 指向刚刚申请并初始化后的 `zend_reference` 最后为新变量申请 `zval_struct` 结构，将他的 `value` 指向刚刚创建的 `zend_reference`， 此时：$a 和 $b 都拥有一个 `zval_struct` 结构体，并且他们的 `zval_struct.value` 都指向了同一个 `zend_reference` 结构，所以该结构的引用计数器的值为 2。\n\n    题外话：zend_reference 又指向了一个整形或浮点型的 value，如果指向的 value 类型是 zend_string，那么该 value 引用计数器的值为 1。而 xdebug 出来的 refcount 显示的是 zend_reference 的计数器值（即 2）。\n\n最终的结果如图：\n\n![](http://images.linyiyuan.top/zend_ref.png)\n\n注意：引用只能通过`&`产生，无法通过赋值传递，比如：\n\n```text-html-php\n$a = \"time:\" . time();      //$a    -> zend_string_1(refcount=1)\n$b = &$a;                   //$a,$b -> zend_reference_1(refcount=2) -> zend_string_1(refcount=1)\n$c = $b;                    //$a,$b -> zend_reference_1(refcount=2) -> zend_string_1(refcount=2)\n                            //$c    ->                                 ---\n```\n\n`$b = &$a`这时候`$a`、`$b`的类型是引用，但是`$c = $b`并不会直接将`$b`赋值给`$c`，而是把`$b`实际指向的zval赋值给`$c`，如果想要`$c`也是一个引用则需要这么操作：\n\n```text-html-php\n$a = \"time:\" . time();      //$a       -> zend_string_1(refcount=1)\n$b = &$a;                   //$a,$b    -> zend_reference_1(refcount=2) -> zend_string_1(refcount=1)\n$c = &$b;/*或$c = &$a*/     //$a,$b,$c -> zend_reference_1(refcount=3) -> zend_string_1(refcount=1) \n```\n\n这个也表示PHP中的 **引用只可能有一层** ，**不会出现一个引用指向另外一个引用的情况** ，也就是没有C语言中`指针的指针`的概念。\n\n# 2.内存管理\n在理解了上面内容后我们对引用计数大概有了一个认识，接下来我们来详细理解PHP7变量的销毁和分配，这些都是基于 **引用计数+写时复制**， PHP变量的管理正是基于这两点实现的。\n\n## 2.1 引用计数\n引用计数是指在value中增加一个字段`refcount`记录指向当前value的数量，变量复制、函数传参时并不直接硬拷贝一份value数据;而是将`refcount++`，变量销毁时将`refcount--`，等到`refcount`减为0时表示已经没有变量引用这个value，将它销毁即可, 下面我们来看一个官方例子：\n\n    硬拷贝这种方式是可行的，而且内存管理也很简单，但是，硬拷贝带来的一个问题是效率低，比如我们定义了一个变量然后赋值给另外一个变量，可能后面都只是只读操作，假如硬拷贝的话就会有多余的一份数据.\n\n```php\n$a = \"time:\" . time();   //$a       ->  zend_string_1(refcount=1)\n$b = $a;                 //$a,$b    ->  zend_string_1(refcount=2)\n$c = $b;                 //$a,$b,$c ->  zend_string_1(refcount=3)\n\nunset($b);               //$b = IS_UNDEF  $a,$c ->  zend_string_1(refcount=2)\n```\n\n首先我们先定义一个变量$a并赋值, 这里为什么要赋值“time:” .time() 待会会详细讲解，这设计到引用计数的几种特殊类型，这时候我们的$a有了一个属于它的`zval_struct` 容器，而她的value 则指向一个`zend_value`, 而变量值则处于这个`zend_value`中，接着声明了了$b，并赋值$a,这时候$b同样生成一个属于它的`zval_struct`容器，而它的value 也同意指向`zend_value`,此时该`zend_value`的`refcount`(引用计数)为2, $c同理， 现在我们来看下引用计数所处的结构，引用计数的信息位于给具体value结构的gc中：\n\n```c\ntypedef struct _zend_refcounted_h {\n    uint32_t         refcount;          /* reference counter 32-bit */\n    union {\n        struct {\n            ZEND_ENDIAN_LOHI_3(\n                zend_uchar    type,\n                zend_uchar    flags,    /* used for strings & objects */\n                uint16_t      gc_info)  /* keeps GC root number (or 0) and color */\n        } v;\n        uint32_t type_info;\n    } u;\n} zend_refcounted_h;\n```\n\n\n现在我们来讲讲关于几种特殊情况下不会使用到引用计数，我们从上面的结构可以看出并不是所有的数据类型都会用到引用计数，以下几种类型都不会使用引用计数：\n1. IS_LONG\n2. IS_DOUBLE\n3. IS_TRUE\n4. IS_FALSE\n5. IS_NULL\n\n首先**NULL**、**布尔型**都属于**没有值**的数据类型（其中布尔型通过 `IS_FALSE` 和 `IS_TRUE` 两个常量来标记），自然也就没有引用计数， 而 **IS_LONG**, **IS_DOUBLE** 这两种类型是`zval` 在 `value` 字段中能保存下的值，就不会在对他们进行引用计数，**而是在拷贝的时候直接赋值** 即我们在 PHP 中的**整形**与**浮点型**。所以有下面几种情况:\n\n```php\n$str_integer = 123;    ->zend_string_1(refcount=0,val=\"123\")\n\n$str_float = 123.123;  ->zend_string_1(refcount=0,val=\"123.123\")\n\n$str_true = true;      ->zend_string_1(refcount=0,val=\"true\")\n\n$str_false = false;    ->zend_string_1(refcount=0,val=\"false\")\n\n$str_null = null;      ->zend_string_1(refcount=0,val=\"null\")\n```\n\n除了以上五种五种特殊类型，我们再来看一个官方例子：\n```php\n$a = \"hi~\";\n\n$b = $a;\n```\n\n不同于上面最开始的例子，我们对$a 赋值一个简单的字符串   然后$b赋值$a, 此时我们肯定以为$a,$b指向的`zend_value` refcount = 2, 但是官方给出的答案这个是错的，gdb调试发现上面例子zend_string的引用计数为0。这是为什么呢？实际上：\n\n    $a,$b -> zend_string_1(refcount=0,val=\"hi~\")\n\n当然这是官方的说法，我在本地使用PHP7.3的环境运行，使用`xdebug_debug_zval` 调试，发现结果并不是跟官方一致：\n\n```php\necho phpversion() . PHP_EOL;\n\n$a = \"hi~\";\n\n$b = $a;\n\nxdebug_debug_zval('a');\n\n\n//结果：\n7.3.0-2+ubuntu18.04.1+deb.sury.org+1\na: (refcount=1, is_ref=0)='hi~'\n```\n\n然后不信邪的继续使用PHP7.2环境运行，结果：\n\n```php\n7.2.19-0ubuntu0.18.04.2\na: (refcount=0, is_ref=0)='123'\n```\n\n发现PHP7.2与PHP7.3的结果完全不一致，我怀疑是PHP7.3更新时更新了一些东西导致的，目前在官方文档并未找到任何相关信息，我们还是具体以官方例子为准，在得出结果后作者会对该问题进行补充\n\n我们继续接着上面的例子，事实上并不是所有的PHP变量都会用到引用计数，标量：true/false/double/long/null是硬拷贝自然不需要这种机制，但是除了这几个还有两个特殊的类型也不会用到：interned string(内部字符串，就是上面提到的字符串flag：IS_STR_INTERNED)、immutable array，它们的type是`IS_STRING`、`IS_ARRAY`，与普通string、array类型相同：\n\n*   **interned string：** 内部字符串，这是种什么类型？我们在PHP中写的所有字符都可以认为是这种类型，比如function name、class name、variable name、静态字符串等等，我们这样定义:`$a = \"hi~\";`后面的字符串内容是唯一不变的，这些字符串等同于C语言中定义在静态变量区的字符串：`char *a = \"hi~\";`，这些字符串的生命周期为request期间，request完成后会统一销毁释放，自然也就无需在运行期间通过引用计数管理内存。\n\n1.  `interned string` 内部字符串（函数名、类名、变量名、静态字符串）：\n\n```php\n $str = '233';    // 静态字符串\n复制代码\n```\n\n2.  普通字符串：\n\n```php\n $str = '233' . time(); \n```\n\n*   **immutable array：**  **不可变数组**是 `opcache` 扩展优化出的一种数组类型，简单的说，所有多次编译结果恒定不变的数组，都会被优化为**不可变数组**\n\n1. 可变数组\n\n```php\n$array = [1, 2, time()];\n```\n\n2.  不可变数组：\n\n```php\n $str = [1,2];\n```\n\n\n*注意* :  **不可变数组**和我们上面讲到的**内部字符串**一样，都是**不使用引用计数**的，但是不同点是，内部字符串的计数值恒为 0，而不可变数组会使用一个**伪计数值** 2。\n\n## 2.2 写时复制\n\n上一小节介绍了引用计数，多个变量可能指向同一个value，然后通过refcount统计引用数，这时候如果其中一个变量试图更改value的内容则会重新拷贝一份value修改，同时断开旧的指向，写时复制的机制在计算机系统中有非常广的应用，它只有在必要的时候(写)才会发生硬拷贝，可以很好的提高效率，下面从示例看下：\n\n```php\n$a = array(1,2);\n$b = &$a;\n$c = $a;\n\n//发生分离\n$b[] = 3;\n```\n\n\n![](http://images.linyiyuan.top/zval_sep.png)\n\n不是所有类型都可以copy的，比如对象、资源，事实上只有string、array两种支持，与引用计数相同，也是通过`zval.u1.type_flag`标识value是否可复制的：\n\n```source-c\n#define IS_TYPE_COPYABLE         (1<<4)\n```\n\n```source-c\n|     type       |  copyable  |\n+----------------+------------+\n|simple types    |            |\n|string          |      Y     |\n|interned string |            |\n|array           |      Y     |\n|immutable array |            |\n|object          |            |\n|resource        |            |\n|reference       |            |\n```\n\n**copyable** 的意思是当value发生duplication时是否需要或者能够copy，这个具体有两种情形下会发生：\n\n*   a.从 **literal变量区** 复制到 **局部变量区** ，比如：`$a = [];`实际会有两个数组，而`$a = \"hi~\";//interned string`则只有一个string\n*   b.局部变量区分离时(写时复制)：如改变变量内容时引用计数大于1则需要分离，`$a = [];$b = $a; $b[] = 1;`这里会分离，类型是array所以可以复制，如果是对象：`$a = new user;$b = $a;$a->name = \"dd\";`这种情况是不会复制object的，$a、$b指向的对象还是同一个\n\n具体literal、局部变量区变量的初始化、赋值后面编译、执行两篇文章会具体分析，这里知道变量有个`copyable`的属性就行了。\n\n## 2.3 变量回收\n\nPHP变量的回收主要有两种：主动销毁、自动销毁。主动销毁指的就是 **unset** ，而自动销毁就是PHP的自动管理机制，在return时减掉局部变量的refcount，即使没有显式的return，PHP也会自动给加上这个操作，另外一个就是写时复制时会断开原来value的指向，这时候也会检查断开后旧value的refcount。\n\n## 2.4 垃圾回收\n\nPHP变量的回收是根据refcount实现的，当unset、return时会将变量的引用计数减掉，如果refcount减到0则直接释放value，这是变量的简单gc过程，PHP变量一般情况下都可以被回收，但是实际上也会出现gc无法回收导致内存泄漏的bug，我们这里举几个例子进行讲解，具体得一个**垃圾回收机制** 我将会在下篇文章具体讲解 先看下一个例子：\n```php\n$a = [1];\n\n$a[] = &$a;\n\nunset($a);\n```\n\n`unset($a)`之前引用关系：\n\n![](http://images.linyiyuan.top/gc_1.png)\n\n`unset($a)`之后：\n\n![](http://images.linyiyuan.top/gc_2.png)\n\n可以看到，`unset($a)`之后由于数组中有子元素指向`$a`，所以`refcount > 0`，无法通过简单的gc机制回收，这种变量就是垃圾，垃圾回收器要处理的就是这种情况，目前垃圾只会出现在array、object两种类型中，所以只会针对这两种情况作特殊处理：当销毁一个变量时，如果发现减掉refcount后仍然大于0，且类型是IS_ARRAY、IS_OBJECT则将此value放入gc可能垃圾双向链表中，等这个链表达到一定数量(10000)后启动检查程序将所有变量检查一遍，如果确定是垃圾则销毁释放。\n\n\n标识变量是否需要回收也是通过`u1.type_flag`区分的：\n\n```source-c\n#define IS_TYPE_COLLECTABLE\n```\n\n```source-c\n|     type       | collectable |\n+----------------+-------------+\n|simple types    |             |\n|string          |             |\n|interned string |             |\n|array           |      Y      |\n|immutable array |             |\n|object          |      Y      |\n|resource        |             |\n|reference       |             |\n```\n\n以上就是对PHP7变量的内部实现的总结，其中大部分内容都来自《PHP内核解析》，本人只不过对其进行了总结整合，因为网上大部分文章其实都是停留在PHP5.x的环境，容易误导，所以我在学习过程中将自己所查阅的资料总结起来，方便大家对其的理解。\n\n# 参考资料\n1. [PHP内核解析之变量的内部实现](https://github.com/pangudashu/php7-internal/blob/master/2/zval.md)\n2. [深入理解PHP7之zval](https://github.com/laruence/php7-internal/blob/master/zval.md)\n3. [confusion about php-7 refcount](https://stackoverflow.com/questions/34764119/confusion-about-php-7-refcount)\n4. [PHP引用变量机制(PHP如何处理变量)](https://www.jianshu.com/p/53fcf6128dcd)\n5. [跟厂长学PHP7内核（八）：深入理解字符串的实现](https://blog.csdn.net/enoch612/article/details/82806820)\n6. [引用计数基本知识](http://docs.php.net/manual/zh/features.gc.refcounting-basics.php)\n7. [深入理解 PHP7 中全新的 zval 容器和引用计数机制](https://juejin.im/post/5bbf50e86fb9a05ce02a9c19)\n\n\n"]],[0,11690],[0,0]]]],null,"Administrator@YMS-20200313EGD"],["e545906b-9817-437a-b3fa-fc8f3821e69c",1630380108258,"",[[1630380057017,["Administrator@YMS-20200313EGD",[[1,0,"---\nlayout: 《工具篇》-- 使用supervisor来管理Linux的后台进程\ntitle:   《工具篇》-- 使用supervisor来管理Linux的后台进程\ndate: 2019-12-19 16:33\ncategories: \"Linux\"\nabbrlink: 031a\ntags: \n- Linux\n- 工具\n---\n\n<img src=\"http://images.linyiyuan.top/klahsudkihajhskdjhk45641564.jpg\" style=\"width:900px;height:400px\" />\n\n# 导言\n我们在日常开发过程中，我们服务器都会经常跑一些程序，而这些程序都是放在后台去运行，但是有些程序运行过程中可能会出现崩溃，或者提前退出等情况，所以我们需要有一个用于管理进程的工具，当进程中断或者奔溃的时候能自动重新启动它，`Supervisor` 就是这么一个用于管理进程的工具\n\n<!--less-->\n\n## Supervisor 介绍\n\n`Supervisor` 是一个进程管理工具，当进程中断的使用`Supervisor`能自动重新启动它，该工具使用`Python`语言开发，支持Linux/Unix系统，不支持Windows系统，它可以很方便的监听、启动、停止、重启一个或多个进程。\n\n## Supervisor 安装\n\n以下安装均在`Ubuntu16.04`系统下进行\n\n1.  安装 `Python`\n\n由于`Supervisor`是由`Python`语言开发，自然而然我们的系统就需要安装`Python`语言环境, 一般情况下`Ubuntu`都自带`Python`语言环境\n\n```bash\napt-get install python3.7\n```\n\n1.  安装`Supervisor`\n\n```bash\napt-get install supervisor\n```\n\n\n安装成功后 运行：\n```bash\nservices supervisor status\n```\n\n查看`supervisor` 运行状态\n\n## Supervisor 配置\n\n首先查看`Supervisor` 的主配置文件，一般文件位于`/etc/supervisor/`目录下\n\n```bash\nvim /etc/supervisor/supervisord.conf\n\n//文件内容\n; supervisor config file \n[unix_http_server]\nfile=/var/run/supervisor.sock   ; (the path to the socket file)\nchmod=0700                       ; sockef file mode (default 0700)\n\n[supervisord]\nlogfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)\npidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)\nchildlogdir=/var/log/supervisor            ; ('AUTO' child log dir, default $TEMP)\n\n; the below section must remain in the config file for RPC\n; (supervisorctl/web interface) to work, additional interfaces may be\n; added by defining them in separate rpcinterface: sections\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[supervisorctl]\nserverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket\n\n; The [include] section can just contain the \"files\" setting.  This\n; setting can list multiple files (separated by whitespace or\n; newlines).  It can also contain wildcards.  The filenames are\n; interpreted as relative to this file.  Included files *cannot*\n; include files themselves.\n\n[include]\nfiles = /etc/supervisor/conf.d/*.conf\n```\n\n从配置文件最后一行可以看出子配置文件位于`/etc/supervisor/conf.d/` 目录下，如果没有则新建相应目录即可，我们打开该目录下`conf.d`目录并新建一个文件 `test.conf`\n\n```bash\nvim test.conf\n```\n\n并写入以下内容：\n\n```bash\n[program:websocket]\ncommand= //需要被监听的进程路径\nautostart=true  //是否随着supervisord的启动而启动\nautorestart=unexpected //是否自动重启\nexitcodes=0 //正常退出代码\nstopsignal=KILL //用来杀死进程的信号\nuser=root //执行命令用户\nredirect_stderr=true //重定向stderr到stdout\nstdout_logfile= //日志路径\n```\n\n紧接着我们重启 `Supervisor` 服务\n\n```bash\nservice supervisor restart\n```\n\n`Supervisord`启动成功后，可以通过`Supervisorct`l客户端控制进程，启动、停止、重启。运行`supervisorctl`命令\n\n\n```bash\nsupervisorctl \ntest  RUNNING   pid 16350, uptime 1:20:44\nsupervisor> status\ntest  RUNNING   pid 16350, uptime 1:20:45\nsupervisor>\n```\n\n\n然后我们可以看到我们监听的进程`test`已经 在运行了，我们可以通过以下命令对其进行控制：\n\n```bash\nsupervisorctl restart <application name> ;重启指定应用\nsupervisorctl stop <application name> ;停止指定应用\nsupervisorctl start <application name> ;启动指定应用\nsupervisorctl restart all ;重启所有应用\nsupervisorctl stop all ;停止所有应用\nsupervisorctl start all ;启动所有应用\n```\n\n## [](http://www.linyiyuan.top/p/031a.html#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0 \"参考文章\")参考文章\n\n1.  [linux学习(四) – supervisor守护进程](https://www.cnblogs.com/redirect/p/6599489.html)\n2.  [Supervisor-守护进程工具](https://www.jianshu.com/p/39b476e808d8)\n\n"]],[0,0],[3432,3432]]],[1630380068258,["Administrator@YMS-20200313EGD",[[-1,12,"《工具篇》-- 使用supervisor来管理Linux的后台进程"]],[13,45],[12,12]]],[1630380068568,["Administrator@YMS-20200313EGD",[[1,12,"《使用教程》如何在VsCode使用数据公式"]],[12,12],[33,33]]],[1630380074385,["Administrator@YMS-20200313EGD",[[-1,44,"工具篇》-- "],[-1,53,"supervisor来管理Linux的后台进程"],[1,76,"教程》如何在VsCode使用数据公式"]],[43,76],[64,64]]],[1630380079248,["Administrator@YMS-20200313EGD",[[-1,73,"19"]],[75,75],[73,73]]],[1630380079402,["Administrator@YMS-20200313EGD",[[1,73,"21"]],[73,73],[75,75]]],[1630380080896,["Administrator@YMS-20200313EGD",[[-1,76,"12"]],[78,78],[76,76]]],[1630380082657,["Administrator@YMS-20200313EGD",[[1,76,"08"]],[76,76],[78,78]]],[1630380084768,["Administrator@YMS-20200313EGD",[[-1,79,"19"]],[81,81],[79,79]]],[1630380084921,["Administrator@YMS-20200313EGD",[[1,79,"31"]],[79,79],[81,81]]],[1630380086976,["Administrator@YMS-20200313EGD",[[-1,82,"16"]],[84,84],[82,82]]],[1630380087217,["Administrator@YMS-20200313EGD",[[1,82,"11"]],[82,82],[84,84]]],[1630380088112,["Administrator@YMS-20200313EGD",[[-1,85,"33"]],[87,87],[85,85]]],[1630380088297,["Administrator@YMS-20200313EGD",[[1,85,"21"]],[85,85],[87,87]]],[1630380090706,["Administrator@YMS-20200313EGD",[[-1,101,"Linux"]],[101,101],[101,101]]],[1630380091825,["Administrator@YMS-20200313EGD",[[1,101,"Other"]],[101,101],[106,106]]],[1630380288955,["Administrator@YMS-20200313EGD",[[-1,119,"31a"]],[118,122],[119,119]]],[1630380289515,["Administrator@YMS-20200313EGD",[[1,119,"01"]],[119,119],[121,121]]],[1630380291616,["Administrator@YMS-20200313EGD",[[-1,118,"001"]],[121,121],[118,118]]]],null,"Administrator@YMS-20200313EGD"],["c2f3ddfa-04ce-424c-baaf-6228548bb9cf",1630380857736,"---\nlayout: 《使用教程》如何在VsCode使用数据公式\ntitle:   《使用教程》如何在VsCode使用数据公式\ndate: 2021-08-31 11:21\ncategories: \"Other\"\nabbrlink: \ntags: \n- Linux\n- 工具\n---\n\n<img src=\"http://images.linyiyuan.top/klahsudkihajhskdjhk45641564.jpg\" style=\"width:900px;height:400px\" />\n\n# 导言\n我们在日常开发过程中，我们服务器都会经常跑一些程序，而这些程序都是放在后台去运行，但是有些程序运行过程中可能会出现崩溃，或者提前退出等情况，所以我们需要有一个用于管理进程的工具，当进程中断或者奔溃的时候能自动重新启动它，`Supervisor` 就是这么一个用于管理进程的工具\n\n<!--less-->\n\n## Supervisor 介绍\n\n`Supervisor` 是一个进程管理工具，当进程中断的使用`Supervisor`能自动重新启动它，该工具使用`Python`语言开发，支持Linux/Unix系统，不支持Windows系统，它可以很方便的监听、启动、停止、重启一个或多个进程。\n\n## Supervisor 安装\n\n以下安装均在`Ubuntu16.04`系统下进行\n\n1.  安装 `Python`\n\n由于`Supervisor`是由`Python`语言开发，自然而然我们的系统就需要安装`Python`语言环境, 一般情况下`Ubuntu`都自带`Python`语言环境\n\n```bash\napt-get install python3.7\n```\n\n1.  安装`Supervisor`\n\n```bash\napt-get install supervisor\n```\n\n\n安装成功后 运行：\n```bash\nservices supervisor status\n```\n\n查看`supervisor` 运行状态\n\n## Supervisor 配置\n\n首先查看`Supervisor` 的主配置文件，一般文件位于`/etc/supervisor/`目录下\n\n```bash\nvim /etc/supervisor/supervisord.conf\n\n//文件内容\n; supervisor config file \n[unix_http_server]\nfile=/var/run/supervisor.sock   ; (the path to the socket file)\nchmod=0700                       ; sockef file mode (default 0700)\n\n[supervisord]\nlogfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)\npidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)\nchildlogdir=/var/log/supervisor            ; ('AUTO' child log dir, default $TEMP)\n\n; the below section must remain in the config file for RPC\n; (supervisorctl/web interface) to work, additional interfaces may be\n; added by defining them in separate rpcinterface: sections\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[supervisorctl]\nserverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket\n\n; The [include] section can just contain the \"files\" setting.  This\n; setting can list multiple files (separated by whitespace or\n; newlines).  It can also contain wildcards.  The filenames are\n; interpreted as relative to this file.  Included files *cannot*\n; include files themselves.\n\n[include]\nfiles = /etc/supervisor/conf.d/*.conf\n```\n\n从配置文件最后一行可以看出子配置文件位于`/etc/supervisor/conf.d/` 目录下，如果没有则新建相应目录即可，我们打开该目录下`conf.d`目录并新建一个文件 `test.conf`\n\n```bash\nvim test.conf\n```\n\n并写入以下内容：\n\n```bash\n[program:websocket]\ncommand= //需要被监听的进程路径\nautostart=true  //是否随着supervisord的启动而启动\nautorestart=unexpected //是否自动重启\nexitcodes=0 //正常退出代码\nstopsignal=KILL //用来杀死进程的信号\nuser=root //执行命令用户\nredirect_stderr=true //重定向stderr到stdout\nstdout_logfile= //日志路径\n```\n\n紧接着我们重启 `Supervisor` 服务\n\n```bash\nservice supervisor restart\n```\n\n`Supervisord`启动成功后，可以通过`Supervisorct`l客户端控制进程，启动、停止、重启。运行`supervisorctl`命令\n\n\n```bash\nsupervisorctl \ntest  RUNNING   pid 16350, uptime 1:20:44\nsupervisor> status\ntest  RUNNING   pid 16350, uptime 1:20:45\nsupervisor>\n```\n\n\n然后我们可以看到我们监听的进程`test`已经 在运行了，我们可以通过以下命令对其进行控制：\n\n```bash\nsupervisorctl restart <application name> ;重启指定应用\nsupervisorctl stop <application name> ;停止指定应用\nsupervisorctl start <application name> ;启动指定应用\nsupervisorctl restart all ;重启所有应用\nsupervisorctl stop all ;停止所有应用\nsupervisorctl start all ;启动所有应用\n```\n\n## [](http://www.linyiyuan.top/p/031a.html#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0 \"参考文章\")参考文章\n\n1.  [linux学习(四) – supervisor守护进程](https://www.cnblogs.com/redirect/p/6599489.html)\n2.  [Supervisor-守护进程工具](https://www.jianshu.com/p/39b476e808d8)\n\n",[[1630380857306,["Administrator@YMS-20200313EGD",[[1,118,"020a"]],[118,118],[122,122]]],[1630380885920,["Administrator@YMS-20200313EGD",[[-1,132,"Linux"]],[133,137],[132,132]]],[1630380887825,["Administrator@YMS-20200313EGD",[[1,132,"VsCode"]],[132,132],[138,138]]],[1630380889497,["Administrator@YMS-20200313EGD",[[1,144,"\n"]],[143,143],[144,144]]],[1630380891610,["Administrator@YMS-20200313EGD",[[1,144,"- Mard"]],[144,144],[150,150]]],[1630380892176,["Administrator@YMS-20200313EGD",[[-1,149,"d"]],[150,150],[149,149]]],[1630380893173,["Administrator@YMS-20200313EGD",[[1,149,"kDown"]],[149,149],[154,154]]],[1630381419409,["Administrator@YMS-20200313EGD",[[-1,273,"我们在日常开发过程中，我们服务器都会经常跑一些程序，而这些程序都是放在后台去运行，但是有些程序运行过程中可能会出现崩溃，或者提前退出等情况，所以我们需要有一个用于管理进程的工具，当进程中断或者奔溃的时候能自动重新启动它，`Supervisor` 就是这么一个用于管理进程的工具"]],[311,411],[273,273]]],[1630381420513,["Administrator@YMS-20200313EGD",[[1,273,"jint"]],[273,273],[277,277]]],[1630381421144,["Administrator@YMS-20200313EGD",[[-1,273,"jint"]],[277,277],[273,273]]],[1630381421288,["Administrator@YMS-20200313EGD",[[-1,274,"\n"]],[273,273],[272,272]]],[1630381422680,["Administrator@YMS-20200313EGD",[[1,274,"\n"]],[272,272],[273,273]]],[1630381431932,["Administrator@YMS-20200313EGD",[[1,273,"在备战自考学习时候"]],[273,273],[282,282]]],[1630381435192,["Administrator@YMS-20200313EGD",[[-1,280,"时候"]],[282,282],[280,280]]],[1630381454346,["Administrator@YMS-20200313EGD",[[1,280,"时，遇到了学习资料上一些数学公式，我需要把他们记录到我的markdown笔记中，而我是在vscode"]],[280,280],[330,330]]],[1630381456225,["Administrator@YMS-20200313EGD",[[1,324,"`"]],[324,324],[325,325]]],[1630381456674,["Administrator@YMS-20200313EGD",[[1,331,"`"]],[331,331],[332,332]]],[1630381458722,["Administrator@YMS-20200313EGD",[[1,308,"`"]],[308,308],[309,309]]],[1630381460034,["Administrator@YMS-20200313EGD",[[1,317,"`"]],[317,317],[318,318]]],[1630381463187,["Administrator@YMS-20200313EGD",[[1,334,"上边"]],[334,334],[336,336]]],[1630381463408,["Administrator@YMS-20200313EGD",[[-1,335,"边"]],[336,336],[335,335]]],[1630381469570,["Administrator@YMS-20200313EGD",[[1,335,"进行编辑markdown 的"]],[335,335],[349,349]]],[1630381470032,["Administrator@YMS-20200313EGD",[[-1,347," 的"]],[349,349],[347,347]]],[1630381475322,["Administrator@YMS-20200313EGD",[[1,347,"的，所以需要一个能够解析"]],[347,347],[359,359]]],[1630381479312,["Administrator@YMS-20200313EGD",[[-1,357,"解析"]],[359,359],[357,357]]],[1630381480185,["Administrator@YMS-20200313EGD",[[1,357,"解析"]],[357,357],[359,359]]],[1630381480696,["Administrator@YMS-20200313EGD",[[-1,357,"解析"]],[359,359],[357,357]]],[1630381490099,["Administrator@YMS-20200313EGD",[[1,357,"书写数学公式并能够在"]],[357,357],[367,367]]],[1630381492728,["Administrator@YMS-20200313EGD",[[-1,366,"在"]],[367,367],[366,366]]],[1630381495418,["Administrator@YMS-20200313EGD",[[1,366,"解析的插件"]],[366,366],[371,371]]],[1630381575377,["Administrator@YMS-20200313EGD",[[-1,372,"\n"]],[372,372],[371,371]]],[1630381575818,["Administrator@YMS-20200313EGD",[[1,371,"。"]],[371,371],[372,372]]],[1630381576352,["Administrator@YMS-20200313EGD",[[-1,371,"。"]],[372,372],[371,371]]],[1630381576633,["Administrator@YMS-20200313EGD",[[1,371,"，"]],[371,371],[372,372]]],[1630381577680,["Administrator@YMS-20200313EGD",[[-1,371,"，"]],[372,372],[371,371]]],[1630381578691,["Administrator@YMS-20200313EGD",[[1,371,", 现在"]],[371,371],[375,375]]],[1630381579536,["Administrator@YMS-20200313EGD",[[-1,373,"现在"]],[375,375],[373,373]]],[1630381584369,["Administrator@YMS-20200313EGD",[[1,373,"在查看了有关``"]],[373,373],[381,381]]],[1630381585665,["Administrator@YMS-20200313EGD",[[1,380,"csco"]],[380,380],[384,384]]],[1630381586472,["Administrator@YMS-20200313EGD",[[-1,380,"csco"]],[384,384],[380,380]]],[1630381586706,["Administrator@YMS-20200313EGD",[[1,380,"vo"]],[380,380],[382,382]]],[1630381587392,["Administrator@YMS-20200313EGD",[[-1,381,"o"]],[382,382],[381,381]]],[1630381588026,["Administrator@YMS-20200313EGD",[[1,381,"scode"]],[381,381],[386,386]]],[1630381604930,["Administrator@YMS-20200313EGD",[[1,387,"插件后，可以通过使用"]],[387,387],[397,397]]],[1630381605392,["Administrator@YMS-20200313EGD",[[-1,395,"使用"]],[397,397],[395,395]]],[1630381606993,["Administrator@YMS-20200313EGD",[[1,395,"安装``"]],[395,395],[399,399]]],[1630381612194,["Administrator@YMS-20200313EGD",[[1,398,"Markdown All in o"]],[398,398],[415,415]]],[1630381612577,["Administrator@YMS-20200313EGD",[[-1,414,"o"]],[415,415],[414,414]]],[1630381613034,["Administrator@YMS-20200313EGD",[[1,414,"One"]],[414,414],[417,417]]],[1630381615826,["Administrator@YMS-20200313EGD",[[1,418," 这款"]],[418,418],[421,421]]],[1630381616200,["Administrator@YMS-20200313EGD",[[-1,420,"款"]],[421,421],[420,420]]],[1630381624130,["Administrator@YMS-20200313EGD",[[1,420,"个插件进行公式的解析以及书写"]],[420,420],[434,434]]],[1630381628913,["Administrator@YMS-20200313EGD",[[-1,450," Supervisor"],[1,461,"Markdown All in One"]],[450,461],[469,469]]],[1630381630738,["Administrator@YMS-20200313EGD",[[1,450," "]],[450,450],[451,451]]],[1630381639153,["Administrator@YMS-20200313EGD",[[-1,476,"Supervisor"]],[476,485],[476,476]]],[1630381639392,["Administrator@YMS-20200313EGD",[[1,476,"Markdown All in One"]],[476,476],[495,495]]],[1630381644080,["Administrator@YMS-20200313EGD",[[-1,280,"时"]],[281,281],[280,280]]],[1630381646554,["Administrator@YMS-20200313EGD",[[1,280,"过程是"]],[280,280],[283,283]]],[1630381647296,["Administrator@YMS-20200313EGD",[[-1,280,"过程是"]],[283,283],[280,280]]],[1630381648162,["Administrator@YMS-20200313EGD",[[1,280,"时"]],[280,280],[281,281]]],[1630381655608,["Administrator@YMS-20200313EGD",[[-1,282,"遇到"]],[282,284],[282,282]]],[1630381657994,["Administrator@YMS-20200313EGD",[[1,282,"在学习"]],[282,282],[285,285]]],[1630381660112,["Administrator@YMS-20200313EGD",[[-1,285,"了学习"]],[285,285],[285,285]]],[1630381663306,["Administrator@YMS-20200313EGD",[[1,285,"书本"]],[285,285],[287,287]]],[1630381676832,["Administrator@YMS-20200313EGD",[[-1,282,"在学习书本资料上一些数学公式"]],[282,296],[282,282]]],[1630381683378,["Administrator@YMS-20200313EGD",[[1,282,"我常常需要记录一些数据"]],[282,282],[293,293]]],[1630381684177,["Administrator@YMS-20200313EGD",[[-1,291,"数据"]],[293,293],[291,291]]],[1630381686500,["Administrator@YMS-20200313EGD",[[1,291,"数学公式到"]],[291,291],[296,296]]],[1630381689424,["Administrator@YMS-20200313EGD",[[-1,296,"，我需要把他们记录到"]],[296,306],[296,296]]],[1630381692793,["Administrator@YMS-20200313EGD",[[1,298," "]],[298,298],[299,299]]],[1630381694866,["Administrator@YMS-20200313EGD",[[1,309," "]],[309,309],[310,310]]],[1630381760878,["Administrator@YMS-20200313EGD",[[-1,489,"是一个进程管理工具，当进程中断的使用`Supervisor`能自动重新启动它，该工具使用`Python`语言开发，支持Linux/Unix系统，不支持Windows系统，它可以很方便的监听、启动、停止、重启一个或多个进程。\n"],[1,601,"一款在VSCode下,编辑md文件十分好用的扩展插件"]],[489,601],[515,515]]],[1630381766745,["Administrator@YMS-20200313EGD",[[1,516,"\n"]],[515,515],[516,516]]],[1630381767304,["Administrator@YMS-20200313EGD",[[1,517,"\n"]],[516,516],[517,517]]],[1630381769257,["Administrator@YMS-20200313EGD",[[1,518,"\n"]],[516,516],[517,517]]],[1630381770757,["Administrator@YMS-20200313EGD",[[1,517,"特点"]],[517,517],[519,519]]],[1630381771168,["Administrator@YMS-20200313EGD",[[-1,517,"特点"]],[519,519],[517,517]]],[1630381771328,["Administrator@YMS-20200313EGD",[[-1,518,"\n"]],[517,517],[516,516]]],[1630381771555,["Administrator@YMS-20200313EGD",[[1,516,"#"]],[516,516],[517,517]]],[1630381772008,["Administrator@YMS-20200313EGD",[[-1,516,"#"]],[517,517],[516,516]]],[1630381772464,["Administrator@YMS-20200313EGD",[[1,518,"\n"]],[516,516],[517,517]]],[1630381774610,["Administrator@YMS-20200313EGD",[[1,517,"### 特点："]],[517,517],[524,524]]],[1630381774953,["Administrator@YMS-20200313EGD",[[1,526,"\n"]],[524,524],[525,525]]],[1630381775128,["Administrator@YMS-20200313EGD",[[1,527,"\n"]],[525,525],[526,526]]],[1630381775308,["Administrator@YMS-20200313EGD",[[1,528,"\n"]],[526,526],[527,527]]],[1630381782130,["Administrator@YMS-20200313EGD",[[1,527,"1.  提供了常用操作便利的快捷键\n2.  支持目录\n3.  一边书写一边预览(Ctrl + Shift + V or Ctrl + K V)\n4.  可轻松转换为HTML文件和PDF文件\n5.  优化了List editing的编辑\n6.  可格式化table (Alt + Shift + F) 以及Task list (use Alt + C to check/uncheck a list item)\n7.  支持特殊数学符号渲染"]],[527,527],[746,746]]],[1630381785640,["Administrator@YMS-20200313EGD",[[1,747,"8. \n"]],[746,746],[750,750]]],[1630381786140,["Administrator@YMS-20200313EGD",[[-1,747,"8. "]],[750,750],[748,748]]],[1630381786181,["Administrator@YMS-20200313EGD",[[1,749,"\n"]],[748,748],[749,749]]],[1630381786209,["Administrator@YMS-20200313EGD",[[1,750,"\n"]],[749,749],[750,750]]],[1630381786258,["Administrator@YMS-20200313EGD",[[1,751,"\n"]],[750,750],[751,751]]],[1630381786285,["Administrator@YMS-20200313EGD",[[1,752,"\n"]],[751,751],[752,752]]],[1630381786314,["Administrator@YMS-20200313EGD",[[1,753,"\n"]],[752,752],[753,753]]],[1630381786362,["Administrator@YMS-20200313EGD",[[1,754,"\n"]],[753,753],[754,754]]],[1630381786422,["Administrator@YMS-20200313EGD",[[1,755,"\n"]],[754,754],[755,755]]],[1630381786449,["Administrator@YMS-20200313EGD",[[1,756,"\n"]],[755,755],[756,756]]],[1630381786493,["Administrator@YMS-20200313EGD",[[1,757,"\n"]],[756,756],[757,757]]],[1630381786519,["Administrator@YMS-20200313EGD",[[1,758,"\n"]],[757,757],[758,758]]],[1630381786559,["Administrator@YMS-20200313EGD",[[1,759,"\n"]],[758,758],[759,759]]],[1630381786587,["Administrator@YMS-20200313EGD",[[1,760,"\n"]],[759,759],[760,760]]],[1630381786647,["Administrator@YMS-20200313EGD",[[1,761,"\n"]],[760,760],[761,761]]],[1630381786674,["Administrator@YMS-20200313EGD",[[1,762,"\n"]],[761,761],[762,762]]],[1630381786699,["Administrator@YMS-20200313EGD",[[1,763,"\n"]],[762,762],[763,763]]],[1630381786731,["Administrator@YMS-20200313EGD",[[1,764,"\n"]],[763,763],[764,764]]],[1630381786761,["Administrator@YMS-20200313EGD",[[1,765,"\n"]],[764,764],[765,765]]],[1630381786866,["Administrator@YMS-20200313EGD",[[1,766,"\n"]],[765,765],[766,766]]],[1630381786902,["Administrator@YMS-20200313EGD",[[1,767,"\n"]],[766,766],[767,767]]],[1630381786931,["Administrator@YMS-20200313EGD",[[1,768,"\n"]],[767,767],[768,768]]],[1630381786961,["Administrator@YMS-20200313EGD",[[1,769,"\n"]],[768,768],[769,769]]],[1630381786996,["Administrator@YMS-20200313EGD",[[1,770,"\n"]],[769,769],[770,770]]],[1630381787037,["Administrator@YMS-20200313EGD",[[1,771,"\n"]],[770,770],[771,771]]],[1630381787068,["Administrator@YMS-20200313EGD",[[1,772,"\n"]],[771,771],[772,772]]],[1630381787100,["Administrator@YMS-20200313EGD",[[1,773,"\n"]],[772,772],[773,773]]],[1630381787208,["Administrator@YMS-20200313EGD",[[1,774,"\n"]],[773,773],[774,774]]],[1630381787236,["Administrator@YMS-20200313EGD",[[1,775,"\n"]],[774,774],[775,775]]],[1630381790240,["Administrator@YMS-20200313EGD",[[-1,526,"\n"]],[525,525],[525,525]]],[1630381790768,["Administrator@YMS-20200313EGD",[[-1,525,"\n"]],[525,525],[525,525]]],[1630381793208,["Administrator@YMS-20200313EGD",[[1,525,"\n"]],[525,525],[526,526]]],[1630381808984,["Administrator@YMS-20200313EGD",[[1,775,"\n"]],[746,746],[747,747]]],[1630381819578,["Administrator@YMS-20200313EGD",[[1,747,"而我们需要用到他的第七个特点，也就是"]],[747,747],[765,765]]],[1630381823649,["Administrator@YMS-20200313EGD",[[1,765,"支持特殊血虚"]],[765,765],[771,771]]],[1630381823856,["Administrator@YMS-20200313EGD",[[-1,769,"血虚"]],[771,771],[769,769]]],[1630381827716,["Administrator@YMS-20200313EGD",[[1,769,"数学符号的渲染"]],[769,769],[776,776]]],[1630381829096,["Administrator@YMS-20200313EGD",[[1,805,"\n"]],[776,776],[777,777]]],[1630381829290,["Administrator@YMS-20200313EGD",[[1,806,"\n"]],[777,777],[778,778]]],[1630381829441,["Administrator@YMS-20200313EGD",[[1,807,"\n"]],[778,778],[779,779]]],[1630381830232,["Administrator@YMS-20200313EGD",[[-1,807,"\n"]],[779,779],[778,778]]],[1630381830376,["Administrator@YMS-20200313EGD",[[-1,806,"\n"]],[778,778],[777,777]]],[1630381830801,["Administrator@YMS-20200313EGD",[[1,806,"\n"]],[777,777],[778,778]]],[1630381830976,["Administrator@YMS-20200313EGD",[[1,807,"\n"]],[778,778],[779,779]]],[1630381840458,["Administrator@YMS-20200313EGD",[[1,779,"## MarkDown All in One 安装"]],[779,779],[804,804]]],[1630381840736,["Administrator@YMS-20200313EGD",[[1,833,"\n"]],[804,804],[805,805]]],[1630381841120,["Administrator@YMS-20200313EGD",[[1,834,"\n"]],[805,805],[806,806]]],[1630381851322,["Administrator@YMS-20200313EGD",[[1,806,"我们通过快捷键 ``"]],[806,806],[816,816]]],[1630381865714,["Administrator@YMS-20200313EGD",[[1,815,"Ctrl + Shirl"]],[815,815],[827,827]]],[1630381869304,["Administrator@YMS-20200313EGD",[[-1,825,"rl"]],[827,827],[825,825]]],[1630381877314,["Administrator@YMS-20200313EGD",[[1,825,"ft + P"]],[825,825],[831,831]]],[1630381878346,["Administrator@YMS-20200313EGD",[[1,832," "]],[832,832],[833,833]]],[1630381891978,["Administrator@YMS-20200313EGD",[[1,833,"调出VsCode控制面板，然后输入 markdown all in one"]],[833,833],[870,870]]],[1630381897448,["Administrator@YMS-20200313EGD",[[-1,851,"markdown all in one\n"]],[851,871],[851,851]]],[1630381897802,["Administrator@YMS-20200313EGD",[[1,851,"``"]],[851,851],[853,853]]],[1630381898321,["Administrator@YMS-20200313EGD",[[1,852,"MarkDown All in One"]],[852,852],[871,871]]],[1630381902611,["Administrator@YMS-20200313EGD",[[1,872," 点击安装即可，"]],[872,872],[880,880]]],[1630381903216,["Administrator@YMS-20200313EGD",[[-1,879,"，"]],[880,880],[879,879]]],[1630381905104,["Administrator@YMS-20200313EGD",[[1,907,"\n"]],[879,879],[880,880]]],[1630381905280,["Administrator@YMS-20200313EGD",[[1,908,"\n"]],[880,880],[881,881]]],[1630381909883,["Administrator@YMS-20200313EGD",[[1,881,"## 公式"]],[881,881],[886,886]]],[1630381910448,["Administrator@YMS-20200313EGD",[[-1,884,"公式"]],[886,886],[884,884]]],[1630381912707,["Administrator@YMS-20200313EGD",[[1,884,"数学公式的使用"]],[884,884],[891,891]]],[1630381919368,["Administrator@YMS-20200313EGD",[[-1,919,"## Supervisor 安装\n\n以下安装均在`Ubuntu16.04`系统下进行\n\n1.  安装 `Python`\n\n由于`Supervisor`是由`Python`语言开发，自然而然我们的系统就需要安装`Python`语言环境, 一般情况下`Ubuntu`都自带`Python`语言环境\n\n```bash\napt-get install python3.7\n```\n\n1.  安装`Supervisor`\n\n```bash\napt-get install supervisor\n```\n\n\n安装成功后 运行：\n```bash\nservices supervisor status\n```\n\n查看`supervisor` 运行状态\n\n## Supervisor 配置\n\n首先查看`Supervisor` 的主配置文件，一般文件位于`/etc/supervisor/`目录下\n\n```bash\nvim /etc/supervisor/supervisord.conf\n\n//文件内容\n; supervisor config file \n[unix_http_server]\nfile=/var/run/supervisor.sock   ; (the path to the socket file)\nchmod=0700                       ; sockef file mode (default 0700)\n\n[supervisord]\nlogfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)\npidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)\nchildlogdir=/var/log/supervisor            ; ('AUTO' child log dir, default $TEMP)\n\n; the below section must remain in the config file for RPC\n; (supervisorctl/web interface) to work, additional interfaces may be\n; added by defining them in separate rpcinterface: sections\n[rpcinterface:supervisor]\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n[supervisorctl]\nserverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket\n\n; The [include] section can just contain the \"files\" setting.  This\n; setting can list multiple files (separated by whitespace or\n; newlines).  It can also contain wildcards.  The filenames are\n; interpreted as relative to this file.  Included files *cannot*\n; include files themselves.\n\n[include]\nfiles = /etc/supervisor/conf.d/*.conf\n```\n\n从配置文件最后一行可以看出子配置文件位于`/etc/supervisor/conf.d/` 目录下，如果没有则新建相应目录即可，我们打开该目录下`conf.d`目录并新建一个文件 `test.conf`\n\n```bash\nvim test.conf\n```\n\n并写入以下内容：\n\n```bash\n[program:websocket]\ncommand= //需要被监听的进程路径\nautostart=true  //是否随着supervisord的启动而启动\nautorestart=unexpected //是否自动重启\nexitcodes=0 //正常退出代码\nstopsignal=KILL //用来杀死进程的信号\nuser=root //执行命令用户\nredirect_stderr=true //重定向stderr到stdout\nstdout_logfile= //日志路径\n```\n\n紧接着我们重启 `Supervisor` 服务\n\n```bash\nservice supervisor restart\n```\n\n`Supervisord`启动成功后，可以通过`Supervisorct`l客户端控制进程，启动、停止、重启。运行`supervisorctl`命令\n\n\n```bash\nsupervisorctl \ntest  RUNNING   pid 16350, uptime 1:20:44\nsupervisor> status\ntest  RUNNING   pid 16350, uptime 1:20:45\nsupervisor>\n```\n\n\n然后我们可以看到我们监听的进程`test`已经 在运行了，我们可以通过以下命令对其进行控制：\n\n```bash\nsupervisorctl restart <application name> ;重启指定应用\nsupervisorctl stop <application name> ;停止指定应用\nsupervisorctl start <application name> ;启动指定应用\nsupervisorctl restart all ;重启所有应用\nsupervisorctl stop all ;停止所有应用\nsupervisorctl start all ;启动所有应用\n```\n\n## [](http://www.linyiyuan.top/p/031a.html#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0 \"参考文章\")参考文章\n\n1.  [linux学习(四) – supervisor守护进程](https://www.cnblogs.com/redirect/p/6599489.html)\n2.  [Supervisor-守护进程工具](https://www.jianshu.com/p/39b476e808d8)\n\n"]],[918,3769],[918,918]]],[1630381929722,["Administrator@YMS-20200313EGD",[[1,893,"我们可以通过以 ``"]],[893,893],[903,903]]],[1630381930626,["Administrator@YMS-20200313EGD",[[1,902,"$$"]],[902,902],[904,904]]],[1630381931971,["Administrator@YMS-20200313EGD",[[-1,902,"$$"]],[904,904],[902,902]]],[1630381932954,["Administrator@YMS-20200313EGD",[[1,902,"$$"]],[902,902],[904,904]]],[1630381934042,["Administrator@YMS-20200313EGD",[[1,905," ``"]],[905,905],[908,908]]],[1630382006880,["Administrator@YMS-20200313EGD",[[-1,906,"``"]],[908,908],[906,906]]],[1630382017146,["Administrator@YMS-20200313EGD",[[1,906," 开头和结尾标识该"]],[906,906],[915,915]]],[1630382019472,["Administrator@YMS-20200313EGD",[[-1,911,"尾标识该"]],[915,915],[911,911]]],[1630382021938,["Administrator@YMS-20200313EGD",[[1,911,"为"]],[911,911],[912,912]]],[1630382022392,["Administrator@YMS-20200313EGD",[[-1,911,"为"]],[912,912],[911,911]]],[1630382033234,["Administrator@YMS-20200313EGD",[[1,911,"尾 作为数学公式的标记，"]],[911,911],[923,923]]],[1630382035776,["Administrator@YMS-20200313EGD",[[-1,922,"，"]],[923,923],[922,922]]],[1630382036112,["Administrator@YMS-20200313EGD",[[1,948,"\n"]],[922,922],[923,923]]],[1630382037514,["Administrator@YMS-20200313EGD",[[1,923,"```"]],[923,923],[926,926]]],[1630382037540,["Administrator@YMS-20200313EGD",[[1,926,"language\n```\n"]],[926,926],[926,934]]],[1630382038650,["Administrator@YMS-20200313EGD",[[-1,926,"language"],[1,934,"$"]],[926,934],[927,927]]],[1630382038850,["Administrator@YMS-20200313EGD",[[1,927,"$"]],[927,927],[928,928]]],[1630382039864,["Administrator@YMS-20200313EGD",[[-1,926,"$$"]],[928,928],[926,926]]],[1630382040522,["Administrator@YMS-20200313EGD",[[1,926," "]],[926,926],[927,927]]],[1630382041696,["Administrator@YMS-20200313EGD",[[-1,926," "]],[927,927],[926,926]]],[1630382042730,["Administrator@YMS-20200313EGD",[[1,926,"mar"]],[926,926],[929,929]]],[1630382043496,["Administrator@YMS-20200313EGD",[[-1,927,"ar"]],[929,929],[927,927]]],[1630382043698,["Administrator@YMS-20200313EGD",[[1,927,"d"]],[927,927],[928,928]]],[1630382044096,["Administrator@YMS-20200313EGD",[[1,929,"\n"]],[928,928],[929,929]]],[1630382045042,["Administrator@YMS-20200313EGD",[[1,929,"$$"]],[929,929],[931,931]]],[1630382045264,["Administrator@YMS-20200313EGD",[[1,932,"\n"]],[931,931],[932,932]]],[1630382045440,["Administrator@YMS-20200313EGD",[[1,933,"\n"]],[932,932],[933,933]]],[1630382045802,["Administrator@YMS-20200313EGD",[[1,933,"$$"]],[933,933],[935,935]]],[1630382050554,["Administrator@YMS-20200313EGD",[[1,932,"  //数学公式"]],[932,932],[940,940]]],[1630382052032,["Administrator@YMS-20200313EGD",[[1,974,"\n"]],[947,947],[948,948]]],[1630382052176,["Administrator@YMS-20200313EGD",[[1,975,"\n"]],[948,948],[949,949]]],[1630382055393,["Administrator@YMS-20200313EGD",[[1,949,"ranho"]],[949,949],[954,954]]],[1630382056264,["Administrator@YMS-20200313EGD",[[-1,949,"ranho"]],[954,954],[949,949]]],[1630382056658,["Administrator@YMS-20200313EGD",[[1,949,"ran"]],[949,949],[952,952]]],[1630382057425,["Administrator@YMS-20200313EGD",[[-1,949,"ran"]],[952,952],[949,949]]],[1630382064005,["Administrator@YMS-20200313EGD",[[1,949,"然后我们在包裹"]],[949,949],[956,956]]],[1630382064425,["Administrator@YMS-20200313EGD",[[-1,954,"包裹"]],[956,956],[954,954]]],[1630382077874,["Administrator@YMS-20200313EGD",[[1,954,"包裹里面书写公式即可，例如："]],[954,954],[968,968]]],[1630382078128,["Administrator@YMS-20200313EGD",[[1,995,"\n"]],[968,968],[969,969]]],[1630382078288,["Administrator@YMS-20200313EGD",[[1,996,"\n"]],[969,969],[970,970]]],[1630382082241,["Administrator@YMS-20200313EGD",[[1,970,"```md\n$$\n  //数学公式\n$$\n```\n"]],[970,970],[995,995]]],[1630382098794,["Administrator@YMS-20200313EGD",[[-1,981,"//数学公式"],[1,987,"\\lim_{x \\to \\infty}"]],[981,987],[1000,1000]]],[1630382108890,["Administrator@YMS-20200313EGD",[[1,1001,"  \n"]],[1000,1000],[1003,1003]]],[1630382109041,["Administrator@YMS-20200313EGD",[[-1,1001,"  "],[1,1003,"\n"]],[1003,1003],[1002,1002]]],[1630382109209,["Administrator@YMS-20200313EGD",[[1,1002,"\\begin{vmatrix}\n\n   a & b \\\\\n\n   c & d\n\n\\end{vmatrix}"]],[1002,1002],[1055,1055]]],[1630382111705,["Administrator@YMS-20200313EGD",[[1,1002,"  "],[1,1018,"  "],[1,1019,"  "],[1,1031,"  "],[1,1032,"  "],[1,1041,"  "],[1,1042,"  "]],[1002,1055],[1002,1069]]],[1630382114642,["Administrator@YMS-20200313EGD",[[-1,988," \\to "],[1,993," \\to "],[-1,1025,"   a & b "],[1,1034,"   a & b "],[-1,1042,"   c & "],[1,1049,"   c & "],[1,1079,"ra"]],[1079,1079],[1081,1081]]],[1630382115336,["Administrator@YMS-20200313EGD",[[-1,1079,"ra"]],[1081,1081],[1079,1079]]],[1630382121226,["Administrator@YMS-20200313EGD",[[1,1079,"然后我们通过在VsCode"]],[1079,1079],[1092,1092]]],[1630382180930,["Administrator@YMS-20200313EGD",[[1,1092," "]],[1092,1092],[1093,1093]]],[1630382183072,["Administrator@YMS-20200313EGD",[[-1,1092," "]],[1093,1093],[1092,1092]]],[1630382187298,["Administrator@YMS-20200313EGD",[[1,1092,"中 按下``"]],[1092,1092],[1098,1098]]],[1630382192249,["Administrator@YMS-20200313EGD",[[1,1097,"Crtl + K VB"]],[1097,1097],[1108,1108]]],[1630382192882,["Administrator@YMS-20200313EGD",[[-1,1107,"B"]],[1108,1108],[1107,1107]]],[1630382201091,["Administrator@YMS-20200313EGD",[[1,1108," 打开MD侧边预览款查看"]],[1108,1108],[1120,1120]]],[1630382203280,["Administrator@YMS-20200313EGD",[[1,1145,"\n"]],[1120,1120],[1121,1121]]],[1630382203473,["Administrator@YMS-20200313EGD",[[1,1146,"\n"]],[1121,1121],[1122,1122]]],[1630382204032,["Administrator@YMS-20200313EGD",[[-1,1146,"\n"]],[1122,1122],[1121,1121]]],[1630382247008,["Administrator@YMS-20200313EGD",[[1,1146,"\n"]],[1121,1121],[1122,1122]]],[1630382247378,["Administrator@YMS-20200313EGD",[[1,1122,"··"]],[1122,1122],[1124,1124]]],[1630382247920,["Administrator@YMS-20200313EGD",[[-1,1122,"··"]],[1124,1124],[1122,1122]]],[1630382249946,["Administrator@YMS-20200313EGD",[[1,1122,"![] ()"]],[1122,1122],[1128,1128]]],[1630382253849,["Administrator@YMS-20200313EGD",[[1,1153,"\n"]],[1129,1129],[1130,1130]]],[1630382274617,["Administrator@YMS-20200313EGD",[[1,1127,"| \n\nhttps://shmily-album.oss-cn-shenzhen.aliyuncs.com/photo_album_19/75694620315b1daefb0c031da3dfca2e.png\n\n |"]],[1127,1127],[1236,1236]]],[1630382278528,["Administrator@YMS-20200313EGD",[[-1,1234," |"]],[1236,1236],[1234,1234]]],[1630382278792,["Administrator@YMS-20200313EGD",[[-1,1233,"\n"]],[1234,1234],[1233,1233]]],[1630382279240,["Administrator@YMS-20200313EGD",[[-1,1232,"\n"]],[1233,1233],[1232,1232]]],[1630382281912,["Administrator@YMS-20200313EGD",[[-1,1130,"\n"]],[1131,1131],[1130,1130]]],[1630382282336,["Administrator@YMS-20200313EGD",[[-1,1129,"\n"]],[1130,1130],[1129,1129]]],[1630382283184,["Administrator@YMS-20200313EGD",[[-1,1127,"| "]],[1129,1129],[1127,1127]]],[1630382287219,["Administrator@YMS-20200313EGD",[[1,1124,"预览"]],[1124,1124],[1126,1126]]],[1630382301256,["Administrator@YMS-20200313EGD",[[-1,1127," "]],[1128,1128],[1127,1127]]],[1630382310032,["Administrator@YMS-20200313EGD",[[-1,1124,"预览"]],[1125,1126],[1124,1124]]],[1630382311162,["Administrator@YMS-20200313EGD",[[1,1124,"gongs"]],[1124,1124],[1129,1129]]],[1630382312040,["Administrator@YMS-20200313EGD",[[-1,1124,"gongs"]],[1129,1129],[1124,1124]]],[1630382313515,["Administrator@YMS-20200313EGD",[[1,1124,"使用公式"]],[1124,1124],[1128,1128]]],[1630382321962,["Administrator@YMS-20200313EGD",[[1,170,"| \n\n"],[1,174,"s"],[-1,177,"images."],[1,184,"shmily-album.oss-cn-shenzhen.a"],[-1,186,"nyi"],[-1,191,"a"],[1,193,"cs"],[1,194,"com/pho"],[-1,196,"p/klahsudkihajhskdjhk45641564"],[1,225,"_album_19/58d7d59cd228cfd9f9c5b88a25a8af9b"],[1,229,"\n\n |"]],[170,229],[279,279]]],[1630382323976,["Administrator@YMS-20200313EGD",[[-1,173,"\n"]],[174,174],[173,173]]],[1630382324600,["Administrator@YMS-20200313EGD",[[-1,172,"\n"]],[173,173],[172,172]]],[1630382325688,["Administrator@YMS-20200313EGD",[[-1,170,"| "]],[172,172],[170,170]]],[1630382329648,["Administrator@YMS-20200313EGD",[[-1,273," |"]],[275,275],[273,273]]],[1630382329800,["Administrator@YMS-20200313EGD",[[-1,272,"\n"]],[273,273],[272,272]]],[1630382330000,["Administrator@YMS-20200313EGD",[[-1,271,"\n"]],[272,272],[271,271]]],[1630382336528,["Administrator@YMS-20200313EGD",[[-1,1299,"\n"]],[1299,1299],[1298,1298]]],[1630382337028,["Administrator@YMS-20200313EGD",[[-1,1298,"\n"]],[1298,1298],[1297,1297]]],[1630382337061,["Administrator@YMS-20200313EGD",[[-1,1297,"\n"]],[1297,1297],[1296,1296]]],[1630382337094,["Administrator@YMS-20200313EGD",[[-1,1296,"\n"]],[1296,1296],[1295,1295]]],[1630382337128,["Administrator@YMS-20200313EGD",[[-1,1295,"\n"]],[1295,1295],[1294,1294]]],[1630382337160,["Administrator@YMS-20200313EGD",[[-1,1294,"\n"]],[1294,1294],[1293,1293]]],[1630382337193,["Administrator@YMS-20200313EGD",[[-1,1293,"\n"]],[1293,1293],[1292,1292]]],[1630382337226,["Administrator@YMS-20200313EGD",[[-1,1292,"\n"]],[1292,1292],[1291,1291]]],[1630382337260,["Administrator@YMS-20200313EGD",[[-1,1291,"\n"]],[1291,1291],[1290,1290]]],[1630382337292,["Administrator@YMS-20200313EGD",[[-1,1290,"\n"]],[1290,1290],[1289,1289]]],[1630382337325,["Administrator@YMS-20200313EGD",[[-1,1289,"\n"]],[1289,1289],[1288,1288]]],[1630382337504,["Administrator@YMS-20200313EGD",[[-1,1288,"\n"]],[1288,1288],[1287,1287]]],[1630382338004,["Administrator@YMS-20200313EGD",[[-1,1287,"\n"]],[1287,1287],[1286,1286]]],[1630382338065,["Administrator@YMS-20200313EGD",[[-1,1286,"\n"]],[1286,1286],[1285,1285]]],[1630382338081,["Administrator@YMS-20200313EGD",[[-1,1285,"\n"]],[1285,1285],[1284,1284]]],[1630382338108,["Administrator@YMS-20200313EGD",[[-1,1284,"\n"]],[1284,1284],[1283,1283]]],[1630382338139,["Administrator@YMS-20200313EGD",[[-1,1283,"\n"]],[1283,1283],[1282,1282]]],[1630382338169,["Administrator@YMS-20200313EGD",[[-1,1282,"\n"]],[1282,1282],[1281,1281]]],[1630382338574,["Administrator@YMS-20200313EGD",[[-1,1281,"\n"]],[1281,1281],[1280,1280]]],[1630382338760,["Administrator@YMS-20200313EGD",[[-1,1280,"\n"]],[1280,1280],[1279,1279]]],[1630382338936,["Administrator@YMS-20200313EGD",[[-1,1279,"\n"]],[1279,1279],[1278,1278]]],[1630382339105,["Administrator@YMS-20200313EGD",[[-1,1278,"\n"]],[1278,1278],[1277,1277]]],[1630382339280,["Administrator@YMS-20200313EGD",[[-1,1277,"\n"]],[1277,1277],[1276,1276]]],[1630382340240,["Administrator@YMS-20200313EGD",[[-1,1276,"\n"]],[1276,1276],[1275,1275]]],[1630382376817,["Administrator@YMS-20200313EGD",[[-1,1012,"```md"]],[1012,1017],[1012,1012]]],[1630382378041,["Administrator@YMS-20200313EGD",[[-1,1110,"```"]],[1110,1113],[1110,1110]]],[1630382385512,["Administrator@YMS-20200313EGD",[[-1,1040," \\begin{vmatrix}\n  \n     a & b \\\\\n  \n     c & d\n  \n  \\end{vmatrix}"]],[1040,1106],[1040,1040]]],[1630382387416,["Administrator@YMS-20200313EGD",[[-1,1038,"\n"]],[1039,1039],[1038,1038]]],[1630382387888,["Administrator@YMS-20200313EGD",[[-1,1037,"\n"]],[1038,1038],[1037,1037]]],[1630382392361,["Administrator@YMS-20200313EGD",[[1,1045,"\n"]],[1042,1042],[1043,1043]]],[1630382394729,["Administrator@YMS-20200313EGD",[[1,1043," \\begin{vmatrix}\n  \n     a & b \\\\\n  \n     c & d\n  \n  \\end{vmatrix}"]],[1043,1043],[1109,1109]]],[1630382395526,["Administrator@YMS-20200313EGD",[[-1,1043," \\begin{vmatrix}\n  \n     a & b \\\\\n  \n     c & d\n  \n  \\end{vmatrix}"]],[1109,1109],[1043,1043]]],[1630382396323,["Administrator@YMS-20200313EGD",[[1,1043,"￥￥"]],[1043,1043],[1045,1045]]],[1630382397048,["Administrator@YMS-20200313EGD",[[-1,1043,"￥￥"]],[1045,1045],[1043,1043]]],[1630382397762,["Administrator@YMS-20200313EGD",[[1,1043,"$$"]],[1043,1043],[1045,1045]]],[1630382397789,["Administrator@YMS-20200313EGD",[[1,1047,"$$\n\n\n"]],[1045,1045],[1046,1046]]],[1630382403793,["Administrator@YMS-20200313EGD",[[1,1046,"\\begin{vmatrix}\n\n   a & b \\\\\n\n   c & d\n\n\\end{vmatrix}"]],[1046,1046],[1099,1099]]],[1630382405585,["Administrator@YMS-20200313EGD",[[1,1046,"  "],[1,1062,"  "],[1,1063,"  "],[1,1075,"  "],[1,1076,"  "],[1,1085,"  "],[1,1086,"  "]],[1046,1099],[1046,1113]]],[1630382407593,["Administrator@YMS-20200313EGD",[[1,1120,"\n"]],[1117,1117],[1118,1118]]],[1630382407970,["Administrator@YMS-20200313EGD",[[-1,1069,"   a & b "],[1,1078,"   a & b "],[-1,1086,"   c & "],[1,1093,"   c & "],[1,1118,"$$"]],[1118,1118],[1120,1120]]],[1630382407997,["Administrator@YMS-20200313EGD",[[1,1122,"$$\n\n\n"]],[1120,1120],[1121,1121]]],[1630382412729,["Administrator@YMS-20200313EGD",[[1,1121,"  $$\n\n\\lim_{x \\to \\infty} \n\n$$"]],[1121,1121],[1151,1151]]],[1630382414984,["Administrator@YMS-20200313EGD",[[-1,1122," "]],[1121,1121],[1121,1121]]],[1630382415321,["Administrator@YMS-20200313EGD",[[-1,1121," "]],[1121,1121],[1121,1121]]],[1630382415704,["Administrator@YMS-20200313EGD",[[-1,1122,"$"]],[1121,1121],[1121,1121]]],[1630382416466,["Administrator@YMS-20200313EGD",[[-1,1121,"$"]],[1121,1121],[1121,1121]]],[1630382417337,["Administrator@YMS-20200313EGD",[[-1,1122,"\n"]],[1121,1121],[1120,1120]]],[1630382419537,["Administrator@YMS-20200313EGD",[[1,1122,"  "]],[1122,1122],[1124,1124]]],[1630382420200,["Administrator@YMS-20200313EGD",[[-1,1145,"\n"]],[1145,1145],[1145,1145]]],[1630382421056,["Administrator@YMS-20200313EGD",[[-1,1121,"\n"]],[1121,1121],[1121,1121]]],[1630382425544,["Administrator@YMS-20200313EGD",[[-1,1148,"$"]],[1147,1147],[1147,1147]]],[1630382426281,["Administrator@YMS-20200313EGD",[[-1,1147,"$"]],[1147,1147],[1147,1147]]],[1630382432024,["Administrator@YMS-20200313EGD",[[-1,1096," "]],[1095,1095],[1095,1095]]],[1630382432874,["Administrator@YMS-20200313EGD",[[-1,1094,"\n"]],[1095,1095],[1094,1094]]],[1630382435136,["Administrator@YMS-20200313EGD",[[-1,1064,"  "]],[1066,1066],[1064,1064]]],[1630382435656,["Administrator@YMS-20200313EGD",[[-1,1064,"\n"]],[1064,1064],[1063,1063]]],[1630382445041,["Administrator@YMS-20200313EGD",[[-1,1113,"$$\n  \\lim_{x \\to \\infty} \n$$"]],[1113,1141],[1113,1113]]],[1630382445256,["Administrator@YMS-20200313EGD",[[-1,1117,"\n"]],[1113,1113],[1112,1112]]],[1630382452753,["Administrator@YMS-20200313EGD",[[1,1113,"$$\n\n\\displaystyle\\sum_{i=1}^{n+1} d_h^i\n\n$$"]],[1113,1113],[1156,1156]]],[1630382454792,["Administrator@YMS-20200313EGD",[[-1,1153,"\n"]],[1153,1153],[1152,1152]]],[1630382457248,["Administrator@YMS-20200313EGD",[[-1,1116,"\n"]],[1116,1116],[1115,1115]]],[1630382459504,["Administrator@YMS-20200313EGD",[[-1,1078,"  "]],[1080,1080],[1078,1078]]],[1630382459824,["Administrator@YMS-20200313EGD",[[-1,1078,"\n"]],[1078,1078],[1077,1077]]],[1630382476616,["Administrator@YMS-20200313EGD",[[1,1013,"\n"]],[1011,1011],[1012,1012]]],[1630382477576,["Administrator@YMS-20200313EGD",[[1,1014,"\n"]],[1011,1011],[1012,1012]]],[1630382477754,["Administrator@YMS-20200313EGD",[[1,1012,"`"],[-1,1144," "],[1,1145," "]],[1012,1012],[1013,1013]]],[1630382478562,["Administrator@YMS-20200313EGD",[[1,1013,"``"]],[1013,1013],[1015,1015]]],[1630382478590,["Administrator@YMS-20200313EGD",[[1,1015,"language\n```\n"]],[1015,1015],[1015,1023]]],[1630382479402,["Administrator@YMS-20200313EGD",[[-1,1015,"language"],[1,1023,"m"]],[1015,1023],[1016,1016]]],[1630382479530,["Administrator@YMS-20200313EGD",[[1,1016,"d"]],[1016,1016],[1017,1017]]],[1630382480064,["Administrator@YMS-20200313EGD",[[1,1018,"\n"]],[1017,1017],[1018,1018]]],[1630382482713,["Administrator@YMS-20200313EGD",[[1,1019,"\n$$\n  \\lim_{x \\to \\infty} \n$$\n\n$$\n  \\begin{vmatrix}\n     a & b \\\\\n     c & d \n  \\end{vmatrix}\n$$\n\n$$\n\\displaystyle\\sum_{i=1}^{n+1} d_h^i\n$$\n"]],[1018,1018],[1158,1158]]],[1630382484856,["Administrator@YMS-20200313EGD",[[-1,1019,"\n"]],[1019,1019],[1018,1018]]],[1630382485112,["Administrator@YMS-20200313EGD",[[-1,1018,"\n"]],[1018,1018],[1017,1017]]],[1630382488232,["Administrator@YMS-20200313EGD",[[-1,1163,"\n"]],[1163,1163],[1162,1162]]],[1630382488680,["Administrator@YMS-20200313EGD",[[-1,1162,"\n"]],[1162,1162],[1161,1161]]],[1630382489136,["Administrator@YMS-20200313EGD",[[1,1162,"\n"]],[1161,1161],[1162,1162]]],[1630382489896,["Administrator@YMS-20200313EGD",[[-1,1162,"\n"]],[1162,1162],[1161,1161]]],[1630382544656,["Administrator@YMS-20200313EGD",[[-1,1303,"\n"]],[1303,1303],[1302,1302]]],[1630390086329,["Administrator@YMS-20200313EGD",[[1,1458,"\n"]],[1457,1457],[1458,1458]]],[1630390088322,["Administrator@YMS-20200313EGD",[[-1,1458,"\n"],[1,1459,"j"]],[1458,1458],[1459,1459]]],[1630390088505,["Administrator@YMS-20200313EGD",[[1,1459,"u"]],[1459,1459],[1460,1460]]],[1630390088992,["Administrator@YMS-20200313EGD",[[-1,1459,"u"]],[1460,1460],[1459,1459]]],[1630390089156,["Administrator@YMS-20200313EGD",[[-1,1458,"j"],[1,1459,"\n"]],[1459,1459],[1458,1458]]],[1630390089947,["Administrator@YMS-20200313EGD",[[-1,1458,"\n"],[1,1459,"具体"]],[1458,1458],[1460,1460]]],[1630390092771,["Administrator@YMS-20200313EGD",[[1,1460,"的公司列"]],[1460,1460],[1464,1464]]],[1630390093248,["Administrator@YMS-20200313EGD",[[-1,1461,"公司列"]],[1464,1464],[1461,1461]]],[1630390102188,["Administrator@YMS-20200313EGD",[[1,1461,"公司列表可以查看下面这个文档链接："]],[1461,1461],[1478,1478]]],[1630390127785,["Administrator@YMS-20200313EGD",[[1,1478,"\n\n"]],[1478,1478],[1479,1479]]],[1630390128499,["Administrator@YMS-20200313EGD",[[-1,1479,"\n"],[1,1480,"！"]],[1479,1479],[1480,1480]]],[1630390128889,["Administrator@YMS-20200313EGD",[[-1,1479,"！"],[1,1480,"\n"]],[1480,1480],[1479,1479]]],[1630390129780,["Administrator@YMS-20200313EGD",[[-1,1479,"\n"],[1,1480,"!"]],[1479,1479],[1480,1480]]],[1630390130753,["Administrator@YMS-20200313EGD",[[1,1480,"[])__"]],[1480,1480],[1484,1484]]],[1630390131344,["Administrator@YMS-20200313EGD",[[-1,1484,"_"]],[1484,1484],[1483,1483]]],[1630390131824,["Administrator@YMS-20200313EGD",[[-1,1483,"_"]],[1483,1483],[1483,1483]]],[1630390132594,["Administrator@YMS-20200313EGD",[[1,1483,")"]],[1483,1483],[1484,1484]]],[1630390132896,["Administrator@YMS-20200313EGD",[[-1,1483,")"]],[1484,1484],[1483,1483]]],[1630390133236,["Administrator@YMS-20200313EGD",[[1,1483,"()"]],[1483,1483],[1485,1485]]],[1630390134512,["Administrator@YMS-20200313EGD",[[-1,1482,")"]],[1483,1483],[1482,1482]]],[1630390135088,["Administrator@YMS-20200313EGD",[[1,1483,"https://katex.org/docs/supported.html"]],[1483,1483],[1520,1520]]],[1630390141832,["Administrator@YMS-20200313EGD",[[-1,1479,"![]("]],[1480,1480],[1479,1479]]],[1630390142609,["Administrator@YMS-20200313EGD",[[-1,1516,")"]],[1517,1517],[1516,1516]]],[1630390162682,["Administrator@YMS-20200313EGD",[[1,1479,"[]("]],[1479,1479],[1482,1482]]],[1630390162710,["Administrator@YMS-20200313EGD",[[1,1490,")https://"]],[1482,1482],[1482,1490]]],[1630390162751,["Administrator@YMS-20200313EGD",[[-1,1482,"https://"],[1,1490,")"]],[1482,1490],[1483,1483]]],[1630390165536,["Administrator@YMS-20200313EGD",[[-1,1483,")https://katex.org/docs/supported.html"]],[1483,1483],[1483,1483]]],[1630390165944,["Administrator@YMS-20200313EGD",[[1,1482,"https://katex.org/docs/supported.html"]],[1482,1482],[1519,1519]]],[1630390180179,["Administrator@YMS-20200313EGD",[[1,1480,"katex官方文档"]],[1480,1480],[1489,1489]]],[1630390181753,["Administrator@YMS-20200313EGD",[[1,1529,"\n\n"]],[1529,1529],[1530,1530]]],[1630390183234,["Administrator@YMS-20200313EGD",[[-1,1530,"\n"],[1,1531,"里面"]],[1530,1530],[1532,1532]]],[1630390183787,["Administrator@YMS-20200313EGD",[[1,1532,"了"]],[1532,1532],[1533,1533]]],[1630390185826,["Administrator@YMS-20200313EGD",[[-1,1478,"\n"]],[1479,1479],[1478,1478]]],[1630390188849,["Administrator@YMS-20200313EGD",[[-1,1528,"\n"]],[1529,1529],[1528,1528]]],[1630390192099,["Administrator@YMS-20200313EGD",[[1,1528,"， "]],[1528,1528],[1530,1530]]],[1630390194609,["Administrator@YMS-20200313EGD",[[-1,1532,"了"]],[1533,1533],[1532,1532]]],[1630390220373,["Administrator@YMS-20200313EGD",[[1,1532,"记录了各种数学公式的书写方法，当然你可以"]],[1532,1532],[1552,1552]]],[1630390220912,["Administrator@YMS-20200313EGD",[[-1,1550,"可以"]],[1552,1552],[1550,1550]]],[1630390222962,["Administrator@YMS-20200313EGD",[[1,1550,"也快易通"]],[1550,1550],[1554,1554]]],[1630390223657,["Administrator@YMS-20200313EGD",[[-1,1551,"快易通"]],[1554,1554],[1551,1551]]],[1630390225770,["Administrator@YMS-20200313EGD",[[1,1551,"通过这个"]],[1551,1551],[1555,1555]]],[1630390236561,["Administrator@YMS-20200313EGD",[[1,1555,"在线 [# LaTeX公式编辑器](https://www.latexlive.com/home)"]],[1555,1555],[1604,1604]]],[1630390237422,["Administrator@YMS-20200313EGD",[[-1,1551,"通过这个在线 [# LaTeX公式编辑器](https://www.latexlive.com/home)"]],[1604,1604],[1551,1551]]],[1630390239174,["Administrator@YMS-20200313EGD",[[1,1551,"快易通"]],[1551,1551],[1554,1554]]],[1630390239766,["Administrator@YMS-20200313EGD",[[-1,1550,"也快易通"]],[1554,1554],[1550,1550]]],[1630390242667,["Administrator@YMS-20200313EGD",[[1,1550,"可以通过这个"]],[1550,1550],[1556,1556]]],[1630390245024,["Administrator@YMS-20200313EGD",[[1,1556,"\n\n"]],[1556,1556],[1557,1557]]],[1630390247272,["Administrator@YMS-20200313EGD",[[-1,1557,"\n"]],[1557,1557],[1556,1556]]],[1630390264521,["Administrator@YMS-20200313EGD",[[1,1556,"LaTex在线公式编辑器去设置你的公式 [# LaTeX公式编辑器](https://www.latexlive.com/home)"]],[1556,1556],[1622,1622]]],[1630390268656,["Administrator@YMS-20200313EGD",[[-1,1577,"#"]],[1578,1578],[1577,1577]]],[1630390271568,["Administrator@YMS-20200313EGD",[[1,1576,"\n"]],[1576,1576],[1577,1577]]],[1630390272536,["Administrator@YMS-20200313EGD",[[1,1577,"\n"]],[1577,1577],[1578,1578]]],[1630390274241,["Administrator@YMS-20200313EGD",[[1,1624,"\n"]],[1623,1623],[1624,1624]]],[1630390322777,["Administrator@YMS-20200313EGD",[[1,1625,"\n"]],[1624,1624],[1625,1625]]],[1630390323162,["Administrator@YMS-20200313EGD",[[-1,1625,"\n"],[1,1626,"！"]],[1625,1625],[1626,1626]]],[1630390323745,["Administrator@YMS-20200313EGD",[[-1,1625,"！"],[1,1626,"\n"]],[1626,1626],[1625,1625]]],[1630390324242,["Administrator@YMS-20200313EGD",[[-1,1625,"\n"],[1,1626,"!"]],[1625,1625],[1626,1626]]],[1630390325034,["Administrator@YMS-20200313EGD",[[1,1626,"[]("]],[1626,1626],[1629,1629]]],[1630390325061,["Administrator@YMS-20200313EGD",[[1,1629,"https://)"]],[1629,1629],[1629,1637]]],[1630390325097,["Administrator@YMS-20200313EGD",[[-1,1629,"https://"],[1,1637,")"]],[1629,1637],[1630,1630]]],[1630390325920,["Administrator@YMS-20200313EGD",[[-1,1630,")"]],[1630,1630],[1630,1630]]],[1630390326506,["Administrator@YMS-20200313EGD",[[1,1629,"https://shmily-album.oss-cn-shenzhen.aliyuncs.com/photo_album_19/6b62a37898d23dc8e18eac51cb912f23.png"]],[1629,1629],[1730,1730]]],[1630390332906,["Administrator@YMS-20200313EGD",[[1,1627,"在线公式编辑器"]],[1627,1627],[1634,1634]]],[1630390347649,["Administrator@YMS-20200313EGD",[[1,1738,"\n\n"]],[1738,1738],[1739,1739]]],[1630390347777,["Administrator@YMS-20200313EGD",[[1,1740,"\n"]],[1739,1739],[1740,1740]]],[1630390347946,["Administrator@YMS-20200313EGD",[[-1,1740,"\n"],[1,1741,"#"]],[1740,1740],[1741,1741]]],[1630390351811,["Administrator@YMS-20200313EGD",[[1,1741,"# 在HTML的解析"]],[1741,1741],[1751,1751]]],[1630390351937,["Administrator@YMS-20200313EGD",[[1,1751,"\n\n"]],[1751,1751],[1752,1752]]],[1630390352529,["Administrator@YMS-20200313EGD",[[1,1753,"\n"]],[1752,1752],[1753,1753]]],[1630390431226,["Administrator@YMS-20200313EGD",[[-1,1753,"\n"],[1,1754,"￥"]],[1753,1753],[1754,1754]]],[1630390431657,["Administrator@YMS-20200313EGD",[[1,1754,"￥"]],[1754,1754],[1755,1755]]],[1630390432617,["Administrator@YMS-20200313EGD",[[-1,1754,"￥"]],[1755,1755],[1754,1754]]],[1630390432792,["Administrator@YMS-20200313EGD",[[-1,1753,"￥"],[1,1754,"\n"]],[1754,1754],[1753,1753]]],[1630390433144,["Administrator@YMS-20200313EGD",[[-1,1753,"\n"]],[1753,1753],[1752,1752]]],[1630390750705,["Administrator@YMS-20200313EGD",[[1,1753,"\n"]],[1752,1752],[1753,1753]]],[1630390751283,["Administrator@YMS-20200313EGD",[[-1,1753,"\n"],[1,1754,"在"]],[1753,1753],[1754,1754]]],[1630390751528,["Administrator@YMS-20200313EGD",[[-1,1753,"在"],[1,1754,"\n"]],[1754,1754],[1753,1753]]],[1630390752731,["Administrator@YMS-20200313EGD",[[-1,1753,"\n"],[1,1754,"我"]],[1753,1753],[1754,1754]]],[1630390753171,["Administrator@YMS-20200313EGD",[[1,1754,"们"]],[1754,1754],[1755,1755]]],[1630390753360,["Administrator@YMS-20200313EGD",[[-1,1754,"们"]],[1755,1755],[1754,1754]]],[1630390753512,["Administrator@YMS-20200313EGD",[[-1,1753,"我"],[1,1754,"\n"]],[1754,1754],[1753,1753]]],[1630390754922,["Administrator@YMS-20200313EGD",[[-1,1753,"\n"],[1,1754,"我"]],[1753,1753],[1754,1754]]],[1630390757157,["Administrator@YMS-20200313EGD",[[1,1754,"的笔记"]],[1754,1754],[1757,1757]]],[1630390757480,["Administrator@YMS-20200313EGD",[[-1,1755,"笔记"]],[1757,1757],[1755,1755]]],[1630390764954,["Administrator@YMS-20200313EGD",[[1,1755,"Markdown笔记最终也是要生成dosc"]],[1755,1755],[1776,1776]]],[1630390765745,["Administrator@YMS-20200313EGD",[[-1,1772,"dosc"]],[1776,1776],[1772,1772]]],[1630390766073,["Administrator@YMS-20200313EGD",[[1,1772,"``"]],[1772,1772],[1774,1774]]],[1630390766835,["Administrator@YMS-20200313EGD",[[1,1773,"so"]],[1773,1773],[1775,1775]]],[1630390767296,["Administrator@YMS-20200313EGD",[[-1,1773,"so"]],[1775,1775],[1773,1773]]],[1630390768594,["Administrator@YMS-20200313EGD",[[1,1773,"docsf"]],[1773,1773],[1778,1778]]],[1630390768937,["Administrator@YMS-20200313EGD",[[-1,1777,"f"]],[1778,1778],[1777,1777]]],[1630390769305,["Administrator@YMS-20200313EGD",[[1,1777,"ify"]],[1777,1777],[1780,1780]]],[1630390773026,["Administrator@YMS-20200313EGD",[[1,1781," 文档，"]],[1781,1781],[1785,1785]]],[1630390773696,["Administrator@YMS-20200313EGD",[[-1,1784,"，"]],[1785,1785],[1784,1784]]],[1630390777731,["Administrator@YMS-20200313EGD",[[1,1784,"，而"]],[1784,1784],[1786,1786]]],[1630390778800,["Administrator@YMS-20200313EGD",[[-1,1784,"，而"]],[1786,1786],[1784,1784]]],[1630390782738,["Administrator@YMS-20200313EGD",[[1,1784,"通过Web去"]],[1784,1784],[1790,1790]]],[1630390784152,["Administrator@YMS-20200313EGD",[[-1,1789,"去"]],[1790,1790],[1789,1789]]],[1630390788853,["Administrator@YMS-20200313EGD",[[1,1789,"去访问的，所以最后总"]],[1789,1789],[1799,1799]]],[1630390789480,["Administrator@YMS-20200313EGD",[[-1,1796,"最后总"]],[1799,1799],[1796,1796]]],[1630390795714,["Administrator@YMS-20200313EGD",[[1,1796,"最终访问的还是HTML、"]],[1796,1796],[1808,1808]]],[1630390796384,["Administrator@YMS-20200313EGD",[[-1,1807,"、"]],[1808,1808],[1807,1807]]],[1630390796802,["Administrator@YMS-20200313EGD",[[1,1807,"`"]],[1807,1807],[1808,1808]]],[1630390797786,["Administrator@YMS-20200313EGD",[[1,1803,"`"]],[1803,1803],[1804,1804]]],[1630390804561,["Administrator@YMS-20200313EGD",[[1,1809," 所以我就需要在HTML"]],[1809,1809],[1821,1821]]],[1630390805906,["Administrator@YMS-20200313EGD",[[1,1817,"``"]],[1817,1817],[1819,1819]]],[1630390807552,["Administrator@YMS-20200313EGD",[[-1,1819,"HTML"]],[1819,1823],[1819,1819]]],[1630390807873,["Administrator@YMS-20200313EGD",[[1,1818,"HTML"]],[1818,1818],[1822,1822]]],[1630390810746,["Administrator@YMS-20200313EGD",[[1,1823," 去显示这"]],[1823,1823],[1828,1828]]],[1630390811208,["Administrator@YMS-20200313EGD",[[-1,1825,"显示这"]],[1828,1828],[1825,1825]]],[1630390812322,["Administrator@YMS-20200313EGD",[[1,1825,"显示"]],[1825,1825],[1827,1827]]],[1630390823748,["Administrator@YMS-20200313EGD",[[1,1827,"这些数学公式，在html页面上我们可以通过加以下代码"]],[1827,1827],[1853,1853]]],[1630390823961,["Administrator@YMS-20200313EGD",[[1,1853,"\n\n"]],[1853,1853],[1854,1854]]],[1630390824129,["Administrator@YMS-20200313EGD",[[1,1855,"\n"]],[1854,1854],[1855,1855]]],[1630390824466,["Administrator@YMS-20200313EGD",[[-1,1855,"\n"],[1,1856,"`"]],[1855,1855],[1856,1856]]],[1630390824827,["Administrator@YMS-20200313EGD",[[1,1856,"``"]],[1856,1856],[1858,1858]]],[1630390824855,["Administrator@YMS-20200313EGD",[[1,1858,"language\n```\n"]],[1858,1858],[1858,1866]]],[1630390825266,["Administrator@YMS-20200313EGD",[[-1,1858,"language"],[1,1866,"h"]],[1858,1866],[1859,1859]]],[1630390825589,["Administrator@YMS-20200313EGD",[[1,1859,"tml"]],[1859,1859],[1862,1862]]],[1630390825888,["Administrator@YMS-20200313EGD",[[1,1863,"\n"]],[1862,1862],[1863,1863]]],[1630390830378,["Administrator@YMS-20200313EGD",[[1,1863,"  <script type=\"text/javascript\" src=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\" async></script>\n\n  <script type=\"text/x-mathjax-config\">\n\n      MathJax.Hub.Config({ tex2jax: {inlineMath: [['$', '$']]}, messageStyle: \"none\" });\n\n  </script>"]],[1863,1863],[2139,2139]]],[1630390834283,["Administrator@YMS-20200313EGD",[[-1,1858,"html\n  "],[1,1865,"js\n  "],[-1,1872," "],[1,1873," "],[-1,1895," "],[1,1896," "],[-1,1979," "],[1,1980," "],[-1,1997,"  "],[1,1999,"  "],[-1,2006," "],[1,2007," "],[-1,2038,"      "],[1,2044,"      "],[-1,2064," "],[1,2065," "],[-1,2073," "],[1,2074," "],[-1,2086," "],[1,2087," "],[-1,2093," "],[1,2094," "],[-1,2101," "],[1,2102," "],[-1,2115," "],[1,2116," "],[-1,2122," "],[1,2123," "],[-1,2128,"  "],[1,2130,"  "]],[1858,1858],[1860,1860]]],[1630390838138,["Administrator@YMS-20200313EGD",[[1,2142,"\n"]],[2141,2141],[2142,2142]]],[1630390838641,["Administrator@YMS-20200313EGD",[[1,2143,"\n"]],[2142,2142],[2143,2143]]],[1630390841380,["Administrator@YMS-20200313EGD",[[-1,2143,"\n"],[1,2144,"使得"]],[2143,2143],[2145,2145]]],[1630390842602,["Administrator@YMS-20200313EGD",[[1,2145,"HTML"]],[2145,2145],[2149,2149]]],[1630390843810,["Administrator@YMS-20200313EGD",[[1,2145,"`"]],[2145,2145],[2146,2146]]],[1630390850746,["Administrator@YMS-20200313EGD",[[1,2150,"`页面能够正确显示数学公式"]],[2150,2150],[2163,2163]]],[1630390859488,["Administrator@YMS-20200313EGD",[[1,2163,"\n\n"]],[2163,2163],[2164,2164]]],[1630390859625,["Administrator@YMS-20200313EGD",[[1,2165,"\n"]],[2164,2164],[2165,2165]]],[1630390859776,["Administrator@YMS-20200313EGD",[[1,2165,"# 参考资料\n1. [PHP内核解析之变量的内部实现](https://github.com/pangudashu/php7-internal/blob/master/2/zval.md)\n2. [PHP内核解析之垃圾回收](https://github.com/pangudashu/php7-internal/blob/master/5/gc.md)\n3. [深入理解 PHP7 中全新的 zval 容器和引用计数机制](https://juejin.im/post/5bbf50e86fb9a05ce02a9c19)\n4. [PHP内核解析之变量的内部实现](https://github.com/pangudashu/php7-internal/blob/master/2/zval.md)\n5. [浅析 PHP7 的垃圾回收机制](https://learnku.com/articles/33451)\n6. [PHP垃圾回收机制](https://segmentfault.com/q/1010000000624583)\n\n"]],[2165,2165],[2633,2633]]],[1630390865424,["Administrator@YMS-20200313EGD",[[-1,483,"#"]],[484,484],[483,483]]],[1630390869864,["Administrator@YMS-20200313EGD",[[-1,821,"#"]],[821,821],[821,821]]],[1630390870536,["Administrator@YMS-20200313EGD",[[-1,922,"#"]],[923,923],[922,922]]],[1630390874217,["Administrator@YMS-20200313EGD",[[-1,1738,"#"]],[1738,1738],[1738,1738]]],[1630390879091,["Administrator@YMS-20200313EGD",[[1,1744,"页面上"]],[1744,1744],[1747,1747]]],[1630390882067,["Administrator@YMS-20200313EGD",[[-1,2312,"internal/blob/master/5/gc.md)\n3. [深入理解 PHP7 中全新的 zval 容器和引用计数机制](https://juejin.im/post/5bbf50e86fb9a05ce02a9c19)\n4. [PHP内核解析之变量的内部实现](https://github.com/pangudashu/php7-internal/blob/master/2/zval.md)\n5. [浅析 PHP7 的垃圾回收机制](https://learnku.com/articles/33451)\n6. [PHP垃圾回收机制](https://segmentfault.com/q/1010000000624583)\n"]],[2312,2631],[2312,2312]]],[1630390883560,["Administrator@YMS-20200313EGD",[[-1,2313,"\n"]],[2313,2313],[2312,2312]]],[1630390888144,["Administrator@YMS-20200313EGD",[[1,2171,"\n"]],[2170,2170],[2171,2171]]],[1630390888616,["Administrator@YMS-20200313EGD",[[1,2171,"https://www.latexlive.com/home"]],[2171,2171],[2201,2201]]],[1630390889297,["Administrator@YMS-20200313EGD",[[-1,2171,"https://www.latexlive.com/home"]],[2201,2201],[2171,2171]]],[1630390889866,["Administrator@YMS-20200313EGD",[[-1,2171,"\n"]],[2171,2171],[2170,2170]]],[1630390894673,["Administrator@YMS-20200313EGD",[[-1,2200,"github"],[1,2206,"www.latexlive"],[-1,2211,"pangudas"],[-1,2220,"u/php7-internal/bl"],[-1,2239,"b/"],[-1,2242,"ast"],[-1,2246,"r/2/zval.md"]],[2192,2257],[2222,2222]]],[1630390903824,["Administrator@YMS-20200313EGD",[[-1,2175,"PHP内核解析之变量的内部实现"]],[2175,2190],[2175,2175]]],[1630390904803,["Administrator@YMS-20200313EGD",[[1,2175,"LA"]],[2175,2175],[2177,2177]]],[1630390905480,["Administrator@YMS-20200313EGD",[[-1,2176,"A"]],[2177,2177],[2176,2176]]],[1630390905931,["Administrator@YMS-20200313EGD",[[1,2176,"at"]],[2176,2176],[2178,2178]]],[1630390906280,["Administrator@YMS-20200313EGD",[[-1,2177,"t"]],[2178,2178],[2177,2177]]],[1630390910731,["Administrator@YMS-20200313EGD",[[1,2177,"Tex公式编辑器"]],[2177,2177],[2185,2185]]],[1630390917114,["Administrator@YMS-20200313EGD",[[1,2218,"、"]],[2218,2218],[2219,2219]]],[1630390917135,["Administrator@YMS-20200313EGD",[[1,2223,"\n2. "]],[2219,2219],[2223,2223]]],[1630390917848,["Administrator@YMS-20200313EGD",[[1,2223,"https://katex.org/docs/supported.html"]],[2223,2223],[2260,2260]]],[1630390918938,["Administrator@YMS-20200313EGD",[[-1,2223,"https://katex.org/docs/supported.html\n2. "]],[2260,2260],[2219,2219]]],[1630390921625,["Administrator@YMS-20200313EGD",[[-1,2246,"github.com/pangudashu/php7-"],[1,2273,"katex.org/docs/supported.html"]],[2238,2273],[2275,2275]]],[1630390922420,["Administrator@YMS-20200313EGD",[[1,2275,")"]],[2275,2275],[2276,2276]]],[1630390931008,["Administrator@YMS-20200313EGD",[[-1,2231,"之"]],[2231,2232],[2231,2231]]],[1630390932360,["Administrator@YMS-20200313EGD",[[1,2231,"之"]],[2231,2231],[2231,2232]]],[1630390934816,["Administrator@YMS-20200313EGD",[[-1,2224,"PHP内核解析之垃圾回收"]],[2231,2232],[2224,2224]]],[1630390937547,["Administrator@YMS-20200313EGD",[[1,2224,"katex官方文档"]],[2224,2224],[2233,2233]]],[1630390944336,["Administrator@YMS-20200313EGD",[[1,155,"\n"]],[154,154],[155,155]]],[1630390947161,["Administrator@YMS-20200313EGD",[[1,155,"- VsCode"]],[155,155],[163,163]]]],null,"Administrator@YMS-20200313EGD"],["773856c5-f610-4f6d-aa2e-5d66f6c0ef53",1630394525841,"---\nlayout: 《使用教程》如何在VsCode使用数据公式\ntitle:   《使用教程》如何在VsCode使用数据公式\ndate: 2021-08-31 11:21\ncategories: \"Other\"\nabbrlink: 020a\ntags: \n- VsCode\n- 工具\n- MarkDown\n- VsCode\n---\n\n<img src=\"https://shmily-album.oss-cn-shenzhen.aliyuncs.com/photo_album_19/58d7d59cd228cfd9f9c5b88a25a8af9b.jpg\" style=\"width:900px;height:400px\" />\n\n# 导言\n在备战自考学习时，我常常需要记录一些数学公式到我的 `markdown` 笔记中，而我是在`vscode`上进行编辑markdown的，所以需要一个能够书写数学公式并能够解析的插件, 在查看了有关`vscode`插件后，可以通过安装`Markdown All in One` 这个插件进行公式的解析以及书写\n<!--less-->\n\n# Markdown All in One 介绍\n\n`Markdown All in One` 一款在VSCode下,编辑md文件十分好用的扩展插件\n\n### 特点：\n\n1.  提供了常用操作便利的快捷键\n2.  支持目录\n3.  一边书写一边预览(Ctrl + Shift + V or Ctrl + K V)\n4.  可轻松转换为HTML文件和PDF文件\n5.  优化了List editing的编辑\n6.  可格式化table (Alt + Shift + F) 以及Task list (use Alt + C to check/uncheck a list item)\n7.  支持特殊数学符号渲染\n\n而我们需要用到他的第七个特点，也就是支持特殊数学符号的渲染\n\n\n# MarkDown All in One 安装\n\n我们通过快捷键 `Ctrl + Shift + P` 调出VsCode控制面板，然后输入 `MarkDown All in One` 点击安装即可\n\n# 数学公式的使用\n\n我们可以通过以 `$$`  开头和结尾 作为数学公式的标记\n```md\n$$\n  //数学公式\n$$\n```\n\n然后我们在包裹里面书写公式即可，例如：\n\n```md\n$$\n  \\lim_{x \\to \\infty} \n$$\n\n$$\n  \\begin{vmatrix}\n     a & b \\\\\n     c & d \n  \\end{vmatrix}\n$$\n\n$$\n\\displaystyle\\sum_{i=1}^{n+1} d_h^i\n$$\n```\n\n$$\n  \\lim_{x \\to \\infty} \n$$\n\n$$\n  \\begin{vmatrix}\n     a & b \\\\\n     c & d \n  \\end{vmatrix}\n$$\n\n$$\n\\displaystyle\\sum_{i=1}^{n+1} d_h^i\n$$\n\n\n然后我们通过在VsCode中 按下`Crtl + K V` 打开MD侧边预览款查看\n\n![使用公式](https://shmily-album.oss-cn-shenzhen.aliyuncs.com/photo_album_19/75694620315b1daefb0c031da3dfca2e.png)\n\n具体的公司列表可以查看下面这个文档链接：[katex官方文档](https://katex.org/docs/supported.html)， 里面记录了各种数学公式的书写方法，当然你可以通过这个LaTex在线公式编辑器去设置你的公式 \n\n[ LaTeX公式编辑器](https://www.latexlive.com/home)\n\n![在线公式编辑器](https://shmily-album.oss-cn-shenzhen.aliyuncs.com/photo_album_19/6b62a37898d23dc8e18eac51cb912f23.png)\n\n# 在HTML页面上的解析\n\n我的Markdown笔记最终也是要生成`docsify` 文档通过Web去访问的，所以最终访问的还是`HTML` 所以我就需要在`HTML` 去显示这些数学公式，在html页面上我们可以通过加以下代码\n\n```js\n  <script type=\"text/javascript\" src=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\" async></script>\n\n  <script type=\"text/x-mathjax-config\">\n\n      MathJax.Hub.Config({ tex2jax: {inlineMath: [['$', '$']]}, messageStyle: \"none\" });\n\n  </script>\n```\n\n使得`HTML`页面能够正确显示数学公式\n\n# 参考资料\n1. [LaTex公式编辑器](https://www.latexlive.com/home)、\n2. [katex官方文档](https://katex.org/docs/supported.html)\n",[[1630394472577,["Administrator@YMS-20200313EGD",[[-1,1748,"在HTML页面上的解析"]],[1749,1759],[1748,1748]]],[1630394474043,["Administrator@YMS-20200313EGD",[[1,1748,"Do"]],[1748,1748],[1750,1750]]],[1630394474769,["Administrator@YMS-20200313EGD",[[-1,1748,"Do"]],[1750,1750],[1748,1748]]],[1630394475955,["Administrator@YMS-20200313EGD",[[1,1748,"Dos"]],[1748,1748],[1751,1751]]],[1630394476825,["Administrator@YMS-20200313EGD",[[-1,1750,"s"]],[1751,1751],[1750,1750]]],[1630394477901,["Administrator@YMS-20200313EGD",[[1,1750,"cfi"]],[1750,1750],[1753,1753]]],[1630394478481,["Administrator@YMS-20200313EGD",[[-1,1751,"fi"]],[1753,1753],[1751,1751]]],[1630394483117,["Administrator@YMS-20200313EGD",[[1,1751,"sify上解析"]],[1751,1751],[1758,1758]]],[1630394485702,["Administrator@YMS-20200313EGD",[[-1,1760,"我的Markdown笔记最终也是要生成`docsify` 文档通过Web去访问的，所以最终访问的还是`HTML` 所以我就需要在`HTML` 去显示这些数学公式，在html页面上我们可以通过加以下代码\n\n```js\n  <script type=\"text/javascript\" src=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\" async></script>\n\n  <script type=\"text/x-mathjax-config\">\n\n      MathJax.Hub.Config({ tex2jax: {inlineMath: [['$', '$']]}, messageStyle: \"none\" });\n\n  </script>\n```\n\n使得`HTML`页面能够正确显示数学公式\n"]],[1760,2171],[1760,1760]]],[1630394488011,["Administrator@YMS-20200313EGD",[[1,1760,"you"]],[1760,1760],[1763,1763]]],[1630394488714,["Administrator@YMS-20200313EGD",[[-1,1760,"you"]],[1763,1763],[1760,1760]]],[1630394492683,["Administrator@YMS-20200313EGD",[[1,1760,"由于我的Markdown "]],[1760,1760],[1773,1773]]],[1630394493129,["Administrator@YMS-20200313EGD",[[-1,1772," "]],[1773,1773],[1772,1772]]],[1630394495803,["Administrator@YMS-20200313EGD",[[1,1772,"笔记是基于``"]],[1772,1772],[1779,1779]]],[1630394498315,["Administrator@YMS-20200313EGD",[[1,1778,"docsify"]],[1778,1778],[1785,1785]]],[1630394506436,["Administrator@YMS-20200313EGD",[[1,1786," 上去构建的项目，所以我的"]],[1786,1786],[1799,1799]]],[1630394506633,["Administrator@YMS-20200313EGD",[[-1,1798,"的"]],[1799,1799],[1798,1798]]],[1630394507620,["Administrator@YMS-20200313EGD",[[1,1798,"必须"]],[1798,1798],[1800,1800]]],[1630394508129,["Administrator@YMS-20200313EGD",[[-1,1798,"必须"]],[1800,1800],[1798,1798]]],[1630394509091,["Administrator@YMS-20200313EGD",[[1,1798,"得"]],[1798,1798],[1799,1799]]],[1630394513705,["Administrator@YMS-20200313EGD",[[-1,1795,"所以我得"]],[1799,1799],[1795,1795]]],[1630394518452,["Administrator@YMS-20200313EGD",[[1,1795,"所以在docsify扥"]],[1795,1795],[1806,1806]]],[1630394518657,["Administrator@YMS-20200313EGD",[[-1,1805,"扥"]],[1806,1806],[1805,1805]]],[1630394524474,["Administrator@YMS-20200313EGD",[[1,1805,"上面也得解析我的数学公式，"]],[1805,1805],[1818,1818]]],[1630394526569,["Administrator@YMS-20200313EGD",[[-1,1818,"然后"]],[1820,1820],[1818,1818]]],[1630394535562,["Administrator@YMS-20200313EGD",[[1,1818,"然而在翻阅了部分资料后，发现ds"]],[1818,1818],[1834,1834]]],[1630394536001,["Administrator@YMS-20200313EGD",[[-1,1833,"s"]],[1834,1834],[1833,1833]]],[1630394537594,["Administrator@YMS-20200313EGD",[[1,1833,"ocsfi"]],[1833,1833],[1838,1838]]],[1630394538017,["Administrator@YMS-20200313EGD",[[-1,1836,"fi"]],[1838,1838],[1836,1836]]],[1630394539155,["Administrator@YMS-20200313EGD",[[1,1836,"ify`"]],[1836,1836],[1840,1840]]],[1630394540779,["Administrator@YMS-20200313EGD",[[1,1832,"`"]],[1832,1832],[1833,1833]]],[1630394546795,["Administrator@YMS-20200313EGD",[[1,1841," 是解析不了markdown`"]],[1841,1841],[1856,1856]]],[1630394548627,["Administrator@YMS-20200313EGD",[[1,1846,"`"]],[1846,1846],[1847,1847]]],[1630394549099,["Administrator@YMS-20200313EGD",[[-1,1846,"`"]],[1847,1847],[1846,1846]]],[1630394549539,["Administrator@YMS-20200313EGD",[[1,1847,"`"]],[1847,1847],[1848,1848]]],[1630394554323,["Administrator@YMS-20200313EGD",[[1,1857,"上面的#$$"]],[1857,1857],[1863,1863]]],[1630394555049,["Administrator@YMS-20200313EGD",[[-1,1860,"#$$"]],[1863,1863],[1860,1860]]],[1630394580539,["Administrator@YMS-20200313EGD",[[1,1860,"$$符号的，所以只能通过配置`docsify`的配置，去自定义配置"]],[1860,1860],[1893,1893]]],[1630394580889,["Administrator@YMS-20200313EGD",[[-1,1891,"配置"]],[1893,1893],[1891,1891]]],[1630394583579,["Administrator@YMS-20200313EGD",[[1,1891,"解析表达式"]],[1891,1891],[1896,1896]]],[1630394584394,["Administrator@YMS-20200313EGD",[[1,1897,"\n"]],[1896,1896],[1897,1897]]],[1630394584545,["Administrator@YMS-20200313EGD",[[1,1898,"\n"]],[1897,1897],[1898,1898]]],[1630394584698,["Administrator@YMS-20200313EGD",[[1,1899,"\n"]],[1898,1898],[1899,1899]]],[1630394644800,[null,[[-1,1896," "],[1,1897,"\n"],[1,1900,"# "]],[1896,1896],[1902,1902]]],[1630394644800,[null,[[1,1896," "],[-1,1896,"\n"],[-1,1900,"# "]],[1902,1902],[1896,1896]]],[1630394590619,["Administrator@YMS-20200313EGD",[[1,1898,"``"]],[1898,1898],[1900,1900]]],[1630394591481,["Administrator@YMS-20200313EGD",[[-1,1898,"``"]],[1900,1900],[1898,1898]]],[1630394597283,["Administrator@YMS-20200313EGD",[[1,1898,"首先我们在index.html`"]],[1898,1898],[1914,1914]]],[1630394599132,["Administrator@YMS-20200313EGD",[[1,1903,"`"]],[1903,1903],[1904,1904]]],[1630394600388,["Administrator@YMS-20200313EGD",[[1,1915," 去"]],[1915,1915],[1917,1917]]],[1630394600833,["Administrator@YMS-20200313EGD",[[-1,1916,"去"]],[1917,1917],[1916,1916]]],[1630394602291,["Administrator@YMS-20200313EGD",[[1,1916,"hear"]],[1916,1916],[1920,1920]]],[1630394602850,["Administrator@YMS-20200313EGD",[[-1,1919,"r"]],[1920,1920],[1919,1919]]],[1630394607939,["Administrator@YMS-20200313EGD",[[1,1919,"d 去引入两个文件"]],[1919,1919],[1928,1928]]],[1630394608201,["Administrator@YMS-20200313EGD",[[1,1930,"\n"]],[1928,1928],[1929,1929]]],[1630394608393,["Administrator@YMS-20200313EGD",[[1,1931,"\n"]],[1929,1929],[1930,1930]]],[1630394609163,["Administrator@YMS-20200313EGD",[[1,1930,"```"]],[1930,1930],[1933,1933]]],[1630394609193,["Administrator@YMS-20200313EGD",[[1,1933,"language\n```\n"]],[1933,1933],[1933,1941]]],[1630394610267,["Administrator@YMS-20200313EGD",[[-1,1933,"language"],[1,1941,"h"]],[1933,1941],[1934,1934]]],[1630394610741,["Administrator@YMS-20200313EGD",[[1,1934,"tml"]],[1934,1934],[1937,1937]]],[1630394615953,["Administrator@YMS-20200313EGD",[[1,1938,"\n"]],[1937,1937],[1938,1938]]],[1630394616325,["Administrator@YMS-20200313EGD",[[1,1938,"<link href=\"https://cdn.bootcss.com/KaTeX/0.10.0/katex.min.css\" rel=\"stylesheet\">\n\n<script src=\"https://cdn.bootcss.com/KaTeX/0.10.0/katex.min.js\"></script>"]],[1938,1938],[2094,2094]]],[1630394618993,["Administrator@YMS-20200313EGD",[[1,2101,"\n"]],[2098,2098],[2099,2099]]],[1630394619579,["Administrator@YMS-20200313EGD",[[1,2102,"\n"]],[2099,2099],[2100,2100]]],[1630394621437,["Administrator@YMS-20200313EGD",[[-1,1943," "],[1,1944," "],[-1,2001," "],[1,2002," "],[-1,2028," "],[1,2029," "],[1,2100,"然后再"]],[2100,2100],[2103,2103]]],[1630394622161,["Administrator@YMS-20200313EGD",[[-1,2102,"再"]],[2103,2103],[2102,2102]]],[1630394633986,["Administrator@YMS-20200313EGD",[[1,2102,"在 windows.$docsify 里面"]],[2102,2102],[2123,2123]]],[1630394634312,["Administrator@YMS-20200313EGD",[[-1,2121,"里面"]],[2123,2123],[2121,2121]]],[1630394642642,["Administrator@YMS-20200313EGD",[[1,2121,"函数体内添加下面的代码"]],[2121,2121],[2132,2132]]],[1630394704799,[null,[[-1,1896," "],[1,1897,"\n"],[1,2135,"# "]],[1896,1896],[2137,2137]]],[1630394704799,[null,[[1,1896," "],[-1,1896,"\n"],[-1,2135,"# "]],[2137,2137],[1896,1896]]],[1630394644883,["Administrator@YMS-20200313EGD",[[1,2104,"`"]],[2104,2104],[2105,2105]]],[1630394646971,["Administrator@YMS-20200313EGD",[[1,2121,"`"]],[2121,2121],[2122,2122]]],[1630394647640,["Administrator@YMS-20200313EGD",[[1,2137,"\n"]],[2134,2134],[2135,2135]]],[1630394647776,["Administrator@YMS-20200313EGD",[[1,2138,"\n"]],[2135,2135],[2136,2136]]],[1630394649209,["Administrator@YMS-20200313EGD",[[1,2136,"```"]],[2136,2136],[2139,2139]]],[1630394649244,["Administrator@YMS-20200313EGD",[[1,2139,"language\n```\n"]],[2139,2139],[2139,2147]]],[1630394649394,["Administrator@YMS-20200313EGD",[[-1,2139,"language"],[1,2147,"j"]],[2139,2147],[2140,2140]]],[1630394649530,["Administrator@YMS-20200313EGD",[[1,2140,"s"]],[2140,2140],[2141,2141]]],[1630394650065,["Administrator@YMS-20200313EGD",[[1,2142,"\n"]],[2141,2141],[2142,2142]]],[1630394655516,["Administrator@YMS-20200313EGD",[[1,2142," markdown: {\n\n        renderer: {\n\n          code: function(code, lang) {\n\n            if (lang === \"tex\") {\n\n                return (\n\n                '<span class=\"tex\">'+ katex.renderToString(code, {\n\n                    throwOnError: false\n\n                })+'</span>'\n\n                );\n\n            }\n\n            return this.origin.code.apply(this, arguments);\n\n          }\n\n        }\n\n      }"]],[2142,2142],[2544,2544]]],[1630394677483,["Administrator@YMS-20200313EGD",[[-1,2142," "],[1,2143," "],[-1,2152," {\n\n        "],[1,2164," {\n\n        "],[-1,2173," {\n\n          "],[1,2187," {\n\n          "],[-1,2192," "],[1,2193," "],[-1,2207," "],[1,2208," "],[-1,2213," {\n\n            if "],[1,2232," {\n\n            if "],[-1,2237," === "],[1,2242," === "],[-1,2248," {\n\n                "],[1,2268," {\n\n                "],[-1,2274," (\n\n                "],[1,2294," (\n\n                "],[-1,2300," "],[1,2301," "],[-1,2315," "],[1,2316," "],[-1,2342," {\n\n                    "],[1,2366," {\n\n                    "],[-1,2379," "],[1,2380," "],[-1,2387,"                "],[1,2403,"                "],[-1,2417,"                "],[1,2433,"                "],[-1,2437,"            }\n\n            "],[1,2464,"            }\n\n            "],[-1,2470," "],[1,2471," "],[-1,2499," "],[1,2500," "],[-1,2513,"          }\n\n        }\n\n      "],[1,2543,"          }\n\n        }\n\n      "],[1,2550,"然后我们通过 ```tex ```"]],[2550,2550],[2567,2567]]],[1630394679339,["Administrator@YMS-20200313EGD",[[1,2564," "]],[2564,2564],[2565,2565]]],[1630394681586,["Administrator@YMS-20200313EGD",[[1,2568," 开头"]],[2568,2568],[2571,2571]]],[1630394684688,["Administrator@YMS-20200313EGD",[[-1,2565,"```"]],[2568,2568],[2565,2565]]],[1630394686726,["Administrator@YMS-20200313EGD",[[1,2568,"喝"]],[2568,2568],[2569,2569]]],[1630394687432,["Administrator@YMS-20200313EGD",[[-1,2568,"喝"]],[2569,2569],[2568,2568]]],[1630394689899,["Administrator@YMS-20200313EGD",[[1,2568,"和  111"]],[2568,2568],[2574,2574]]],[1630394690528,["Administrator@YMS-20200313EGD",[[-1,2571,"111"]],[2574,2574],[2571,2571]]],[1630394691178,["Administrator@YMS-20200313EGD",[[1,2571,"···"]],[2571,2571],[2574,2574]]],[1630394691704,["Administrator@YMS-20200313EGD",[[-1,2571,"···"]],[2574,2574],[2571,2571]]],[1630394692362,["Administrator@YMS-20200313EGD",[[1,2571,"···"]],[2571,2571],[2574,2574]]],[1630394693272,["Administrator@YMS-20200313EGD",[[-1,2570," ···"]],[2574,2574],[2570,2570]]],[1630394694555,["Administrator@YMS-20200313EGD",[[1,2570,"```"]],[2570,2570],[2573,2573]]],[1630394696874,["Administrator@YMS-20200313EGD",[[1,2570," "]],[2570,2570],[2571,2571]]],[1630394697936,["Administrator@YMS-20200313EGD",[[-1,2569,"  "]],[2571,2571],[2569,2569]]],[1630394698322,["Administrator@YMS-20200313EGD",[[1,2569," "]],[2569,2569],[2570,2570]]],[1630394700888,["Administrator@YMS-20200313EGD",[[-1,2563,"   "]],[2566,2566],[2563,2563]]],[1630394701370,["Administrator@YMS-20200313EGD",[[1,2563," "]],[2563,2563],[2564,2564]]],[1630394704200,["Administrator@YMS-20200313EGD",[[-1,2570,"`"]],[2568,2568],[2568,2568]]],[1630394704384,["Administrator@YMS-20200313EGD",[[-1,2569,"`"]],[2568,2568],[2568,2568]]],[1630394704560,["Administrator@YMS-20200313EGD",[[-1,2568,"`"]],[2568,2568],[2568,2568]]],[1630394764807,[null,[[-1,1896," "],[1,1897,"\n"],[1,2570,"# "]],[1896,1896],[2572,2572]]],[1630394764807,[null,[[1,1896," "],[-1,1896,"\n"],[-1,2570,"# "]],[2572,2572],[1896,1896]]],[1630394705512,["Administrator@YMS-20200313EGD",[[-1,2566,"和 "]],[2568,2568],[2566,2566]]],[1630394715450,["Administrator@YMS-20200313EGD",[[1,2566," 去解析我们的Latex数学公式例如："]],[2566,2566],[2585,2585]]],[1630394715640,["Administrator@YMS-20200313EGD",[[1,2587,"\n"]],[2585,2585],[2586,2586]]],[1630394715920,["Administrator@YMS-20200313EGD",[[1,2588,"\n"]],[2586,2586],[2587,2587]]],[1630394716700,["Administrator@YMS-20200313EGD",[[1,2587,"```"]],[2587,2587],[2590,2590]]],[1630394716730,["Administrator@YMS-20200313EGD",[[1,2590,"language\n```\n"]],[2590,2590],[2590,2598]]],[1630394719883,["Administrator@YMS-20200313EGD",[[-1,2590,"language"],[1,2598,"b"]],[2590,2598],[2591,2591]]],[1630394720210,["Administrator@YMS-20200313EGD",[[1,2591,"ash"]],[2591,2591],[2594,2594]]],[1630394720424,["Administrator@YMS-20200313EGD",[[1,2595,"\n"]],[2594,2594],[2595,2595]]],[1630394720640,["Administrator@YMS-20200313EGD",[[1,2596,"\n"]],[2595,2595],[2596,2596]]],[1630394722572,["Administrator@YMS-20200313EGD",[[1,2596,"```tex"]],[2596,2596],[2602,2602]]],[1630394723072,["Administrator@YMS-20200313EGD",[[1,2603,"\n"]],[2602,2602],[2603,2603]]],[1630394723256,["Administrator@YMS-20200313EGD",[[1,2604,"\n"]],[2603,2603],[2604,2604]]],[1630394723865,["Administrator@YMS-20200313EGD",[[1,2604,"```"]],[2604,2604],[2607,2607]]],[1630394733576,["Administrator@YMS-20200313EGD",[[-1,2587,"```bash\n\n```tex\n\n```\n```"]],[2587,2611],[2587,2587]]],[1630394735608,["Administrator@YMS-20200313EGD",[[-1,2589,"\n"]],[2587,2587],[2586,2586]]],[1630394736224,["Administrator@YMS-20200313EGD",[[1,2589,"\n"]],[2586,2586],[2587,2587]]],[1630394737522,["Administrator@YMS-20200313EGD",[[1,2587,"```"]],[2587,2587],[2590,2590]]],[1630394737551,["Administrator@YMS-20200313EGD",[[1,2590,"language\n```\n"]],[2590,2590],[2590,2598]]],[1630394738578,["Administrator@YMS-20200313EGD",[[-1,2590,"language"],[1,2598,"t"]],[2590,2598],[2591,2591]]],[1630394739170,["Administrator@YMS-20200313EGD",[[1,2591,"ext"]],[2591,2591],[2594,2594]]],[1630394739608,["Administrator@YMS-20200313EGD",[[-1,2593,"t"]],[2594,2594],[2593,2593]]],[1630394761042,["Administrator@YMS-20200313EGD",[[-1,2587,"```tex\n```"]],[2587,2597],[2587,2587]]],[1630394761489,["Administrator@YMS-20200313EGD",[[-1,2590,"\n"]],[2587,2587],[2586,2586]]],[1630394763994,["Administrator@YMS-20200313EGD",[[1,2560,"`"],[1,2563," ````进行包围，以质能转换公式为例"]],[2557,2563],[2583,2583]]],[1630394824810,[null,[[-1,1896," "],[1,1897,"\n"],[1,2610,"# "]],[1896,1896],[2612,2612]]],[1630394824810,[null,[[1,1896," "],[-1,1896,"\n"],[-1,2610,"# "]],[2612,2612],[1896,1896]]],[1630394768866,["Administrator@YMS-20200313EGD",[[1,2610,"\n"]],[2606,2606],[2607,2607]]],[1630394770155,["Administrator@YMS-20200313EGD",[[1,2607,"```"]],[2607,2607],[2610,2610]]],[1630394770184,["Administrator@YMS-20200313EGD",[[1,2610,"language\n```\n"]],[2610,2610],[2610,2618]]],[1630394770859,["Administrator@YMS-20200313EGD",[[-1,2610,"language"],[1,2618,"b"]],[2610,2618],[2611,2611]]],[1630394771203,["Administrator@YMS-20200313EGD",[[1,2611,"ash"]],[2611,2611],[2614,2614]]],[1630394771417,["Administrator@YMS-20200313EGD",[[1,2615,"\n"]],[2614,2614],[2615,2615]]],[1630394774715,["Administrator@YMS-20200313EGD",[[1,2615,"```text\n```tex\n        E=mc^2\n```\n```"]],[2615,2615],[2652,2652]]],[1630394778105,["Administrator@YMS-20200313EGD",[[-1,2607,"```bash\n```text\n```tex\n        E=mc^2\n```\n```\n```\n\n\n"]],[2607,2659],[2607,2607]]],[1630394778586,["Administrator@YMS-20200313EGD",[[1,2607,"```text\n```tex\n        E=mc^2\n```\n```"]],[2607,2607],[2644,2644]]],[1630394789852,["Administrator@YMS-20200313EGD",[[1,2618," "]],[2618,2618],[2619,2619]]],[1630394790476,["Administrator@YMS-20200313EGD",[[-1,2618," "]],[2619,2619],[2618,2618]]],[1630394791197,["Administrator@YMS-20200313EGD",[[-1,2610,"t"],[1,2611," "]],[2610,2611],[2611,2611]]],[1630394791668,["Administrator@YMS-20200313EGD",[[1,2610,"t"],[-1,2610," "]],[2611,2611],[2610,2611]]],[1630394792355,["Administrator@YMS-20200313EGD",[[1,2610," "]],[2610,2610],[2611,2611]]],[1630394793106,["Administrator@YMS-20200313EGD",[[-1,2610," "]],[2611,2611],[2610,2610]]],[1630394793588,["Administrator@YMS-20200313EGD",[[1,2610," "]],[2610,2610],[2611,2611]]],[1630394794036,["Administrator@YMS-20200313EGD",[[-1,2610," "]],[2611,2611],[2610,2610]]],[1630394795820,["Administrator@YMS-20200313EGD",[[1,2618," `"]],[2618,2618],[2620,2620]]],[1630394796468,["Administrator@YMS-20200313EGD",[[1,2623,"`"]],[2623,2623],[2624,2624]]],[1630394797865,["Administrator@YMS-20200313EGD",[[-1,2623,"`"]],[2624,2624],[2623,2623]]],[1630394798833,["Administrator@YMS-20200313EGD",[[-1,2619,"`"]],[2620,2620],[2619,2619]]],[1630394806129,["Administrator@YMS-20200313EGD",[[-1,2618," "],[1,2646,"\n这样比用$包围麻烦，但好歹能用。"]],[2607,2646],[2662,2662]]],[1630394819793,["Administrator@YMS-20200313EGD",[[-1,2607,"```text"]],[2607,2614],[2607,2607]]],[1630394821137,["Administrator@YMS-20200313EGD",[[-1,2634,"```"]],[2634,2637],[2634,2634]]],[1630394822140,["Administrator@YMS-20200313EGD",[[1,2608,"·"]],[2608,2608],[2609,2609]]],[1630394823905,["Administrator@YMS-20200313EGD",[[-1,2608,"·"]],[2609,2609],[2608,2608]]],[1630394824387,["Administrator@YMS-20200313EGD",[[1,2611,"`"]],[2608,2608],[2609,2609]]],[1630394884812,[null,[[-1,1896," "],[1,1897,"\n"],[1,2654,"# "]],[1896,1896],[2656,2656]]],[1630394884812,[null,[[1,1896," "],[-1,1896,"\n"],[-1,2654,"# "]],[2656,2656],[1896,1896]]],[1630394825916,["Administrator@YMS-20200313EGD",[[1,2634,"`"]],[2634,2634],[2635,2635]]],[1630394827025,["Administrator@YMS-20200313EGD",[[1,2634,"\n"]],[2634,2634],[2635,2635]]],[1630394828305,["Administrator@YMS-20200313EGD",[[1,2609,"\n"]],[2609,2609],[2610,2610]]],[1630394830976,["Administrator@YMS-20200313EGD",[[-1,2609,"\n"]],[2610,2610],[2609,2609]]],[1630394832265,["Administrator@YMS-20200313EGD",[[-1,2634,"\n"]],[2635,2635],[2634,2634]]],[1630394835620,["Administrator@YMS-20200313EGD",[[1,2615,"`"]],[2615,2615],[2616,2616]]],[1630394837717,["Administrator@YMS-20200313EGD",[[1,2611," "]],[2611,2611],[2612,2612]]],[1630394839593,["Administrator@YMS-20200313EGD",[[-1,2636,"`"]],[2636,2636],[2636,2636]]],[1630394845122,["Administrator@YMS-20200313EGD",[[1,2623,"\n        "]],[2623,2623],[2632,2632]]],[1630394846413,["Administrator@YMS-20200313EGD",[[-1,2623,"\n        "]],[2632,2632],[2623,2623]]],[1630394849777,["Administrator@YMS-20200313EGD",[[-1,2608,"``` `tex`\n        E=mc^2\n```\n"]],[2607,2636],[2607,2607]]],[1630394849961,["Administrator@YMS-20200313EGD",[[-1,2609,"\n"]],[2607,2607],[2606,2606]]],[1630394850513,["Administrator@YMS-20200313EGD",[[1,2609,"\n"]],[2606,2606],[2607,2607]]],[1630394850795,["Administrator@YMS-20200313EGD",[[1,2607,"\""]],[2607,2607],[2608,2608]]],[1630394850828,["Administrator@YMS-20200313EGD",[[-1,2607,"\""],[1,2608,"“"]],[2608,2608],[2608,2608]]],[1630394850987,["Administrator@YMS-20200313EGD",[[1,2608,"\""]],[2608,2608],[2609,2609]]],[1630394851018,["Administrator@YMS-20200313EGD",[[-1,2608,"\""],[1,2609,"”"]],[2609,2609],[2609,2609]]],[1630394851937,["Administrator@YMS-20200313EGD",[[1,2608,"\n"]],[2608,2608],[2609,2609]]],[1630394852116,["Administrator@YMS-20200313EGD",[[1,2609,"\n"]],[2609,2609],[2610,2610]]],[1630394854516,["Administrator@YMS-20200313EGD",[[1,2609,"111"]],[2609,2609],[2612,2612]]],[1630394855121,["Administrator@YMS-20200313EGD",[[-1,2609,"111"]],[2612,2612],[2609,2609]]],[1630394855638,["Administrator@YMS-20200313EGD",[[1,2609,"···"]],[2609,2609],[2612,2612]]],[1630394856169,["Administrator@YMS-20200313EGD",[[-1,2609,"···"]],[2612,2612],[2609,2609]]],[1630394856875,["Administrator@YMS-20200313EGD",[[1,2609,"```"]],[2609,2609],[2612,2612]]],[1630394856908,["Administrator@YMS-20200313EGD",[[1,2612,"language\n```\n"]],[2612,2612],[2612,2620]]],[1630394857971,["Administrator@YMS-20200313EGD",[[-1,2612,"language"],[1,2620,"t"]],[2612,2620],[2613,2613]]],[1630394858475,["Administrator@YMS-20200313EGD",[[1,2613,"ext"]],[2613,2613],[2616,2616]]],[1630394934010,[null,[[-1,1896," "],[1,1897,"\n"],[1,2643,"# "]],[1896,1896],[2645,2645]]],[1630394934010,[null,[[1,1896," "],[-1,1896,"\n"],[-1,2643,"# "]],[2645,2645],[1896,1896]]],[1630394891884,["Administrator@YMS-20200313EGD",[[1,2609,"、"]],[2609,2609],[2610,2610]]],[1630394893272,["Administrator@YMS-20200313EGD",[[-1,2609,"、"]],[2610,2610],[2609,2609]]],[1630394893700,["Administrator@YMS-20200313EGD",[[1,2609,"\\"]],[2609,2609],[2610,2610]]],[1630394894474,["Administrator@YMS-20200313EGD",[[1,2611,"\\"]],[2611,2611],[2612,2612]]],[1630394895034,["Administrator@YMS-20200313EGD",[[1,2613,"\\"]],[2613,2613],[2614,2614]]],[1630394898584,["Administrator@YMS-20200313EGD",[[-1,2628,"\n"]],[2626,2626],[2626,2626]]],[1630394899360,["Administrator@YMS-20200313EGD",[[-1,2625,"”"]],[2626,2626],[2625,2625]]],[1630394899504,["Administrator@YMS-20200313EGD",[[-1,2626,"\n"]],[2625,2625],[2624,2624]]],[1630394899696,["Administrator@YMS-20200313EGD",[[-1,2625,"\n"]],[2624,2624],[2623,2623]]],[1630394901264,["Administrator@YMS-20200313EGD",[[-1,2607,"“"]],[2608,2608],[2607,2607]]],[1630394901633,["Administrator@YMS-20200313EGD",[[-1,2607,"\n"]],[2607,2607],[2606,2606]]],[1630394903072,["Administrator@YMS-20200313EGD",[[-1,2609,"\\"]],[2609,2609],[2609,2609]]],[1630394903624,["Administrator@YMS-20200313EGD",[[-1,2610,"\\"]],[2610,2610],[2610,2610]]],[1630394906419,["Administrator@YMS-20200313EGD",[[1,2616,"\\"]],[2616,2616],[2617,2617]]],[1630394908896,["Administrator@YMS-20200313EGD",[[-1,2613,"xt"]],[2615,2615],[2613,2613]]],[1630394909002,["Administrator@YMS-20200313EGD",[[1,2613,"x"]],[2613,2613],[2614,2614]]],[1630394909298,["Administrator@YMS-20200313EGD",[[1,2615,"\n"]],[2614,2614],[2615,2615]]],[1630394909882,["Administrator@YMS-20200313EGD",[[1,2616,"\n"]],[2615,2615],[2616,2616]]],[1630394913178,["Administrator@YMS-20200313EGD",[[1,2616,"  "]],[2616,2616],[2618,2618]]],[1630394915394,["Administrator@YMS-20200313EGD",[[1,2615,"   "]],[2615,2615],[2618,2618]]],[1630394921728,["Administrator@YMS-20200313EGD",[[-1,1269,"displaystyle\\"]],[1269,1281],[1268,1268]]],[1630394928593,["Administrator@YMS-20200313EGD",[[1,2608,"\\sum_{i=1}^{n+1} d_h^i"]],[2608,2608],[2630,2630]]],[1630394931160,["Administrator@YMS-20200313EGD",[[-1,2602,"   "]],[2605,2605],[2602,2602]]],[1630394931552,["Administrator@YMS-20200313EGD",[[-1,2602,"\n"]],[2602,2602],[2601,2601]]]],null,"Administrator@YMS-20200313EGD"]]}