{"compress":true,"commitItems":[["3769579e-ea27-4893-96ad-c3c175e7ec3c",1630380671405,"---\nlayout: 检测IP是否为国内IP\ntitle: 检测IP是否为国内IP\ndate: 2019-08-10 14:42:45\ncategories: \"PHP\"\nabbrlink: 003a\ntags: \n- PHP\n---\n\n<img src=\"http://images.linyiyuan.top/timg.jpg\" style=\"width:900px;height:400px\" />\n\n# 前言\n最近项目有个需求，需要限制国外IP的访问，并且请求频率比较多，使用淘宝提供的接口检测的话 超过一定次数就会卡顿或者出现502的错误，所以这里通过计算IP以及网段判断IP是否处于国内的网段，根据Apnic分配给中国的IP网段可以知道所有国内的网段列表 ，这个网段列表是会持续更新，所以需要我们定期去获取更新\n\n>  Apnic是全球5个地区级的Internet注册机构（RIR）之一，负责亚太地区的以下一些事务： \n（1）分配IPv4和IPv6地址空间，AS号 \n（2）为亚太地区维护Whois数据库 \n（3）反向DNS指派 \n（4）在全球范围内作为亚太地区的Internet社区的代表\n\n<!--less-->\n\n# 定期获取IP网段\n这里小编写了shell脚本并且结合crontab定期获取IP网段列表并写入Redis\n\n1. 编写shell脚本获取IP断列表并写入redis中, 保存文件为shell.sh\n```bash\n!#/bin/bash\ncurl 'http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest' | grep ipv4 | grep CN | awk -F\\| '{ printf(\"%s/%d\\n\", $4, 32-log($5)/log(2)) }' > /china_ip.txt\n\ncat '/china_ip.txt' |while read p\n  do\n    redis-cli -h 127.0.0.1 -p 6379 hset \"china_ip\" $p $p >/dev/null\n  done\n```\n\n2. 在crontab 加上以下命令 (每天00:00自动更新脚本)\n```bash\n00 00 * * * /data/shell.sh\n```\n\n\n# 使用函数判断指定IP是否存在指定网段中（Laravel框架）\n\n```php\n/**\n * Class Sms\n * @package App\\Http\\Services\\Common\n * @Author YiYuan-LIn\n * @Date: 2019/2/28\n * 校验IP工具类\n */\nclass VerifyIp\n{\n    /**\n     * @Author YiYuan-LIn\n     * @Date: 2019/8/10\n     * @enumeration:\n     * @param $ip\n     * @return bool\n     * @description 校验IP是否处于国内的网段\n     */\n    public static function CheckWhetherIPIsDomestic($ip)\n    {\n        //校验IP参数是否合法\n        if (empty($ip)) return false;\n        if(filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4)) return false;\n        $ip = (double) (sprintf(\"%u\", ip2long($ip)));\n        $china_ip = Redis::hkeys('china_ip');\n        $china_ip = array_filter($china_ip);\n        if (empty($china_ip)) return false;\n\n        foreach ($china_ip as $key => $value) {\n            $s = explode('/', $value);\n            $network_start = (double) (sprintf(\"%u\", ip2long($s[0])));\n            $network_len = pow(2, 32 - $s[1]);\n            $network_end = $network_start + $network_len - 1;\n\n            if ($ip >= $network_start && $ip <= $network_end) return true;\n            continue ;\n        }\n\n        return false;\n    }\n}\n```\n\n",[[1630380671009,["Administrator@YMS-20200313EGD",[[-1,99,"3"]],[100,100],[99,99]]],[1630380671082,["Administrator@YMS-20200313EGD",[[1,99,"4"]],[99,99],[100,100]]]],null,"Administrator@YMS-20200313EGD"]]}